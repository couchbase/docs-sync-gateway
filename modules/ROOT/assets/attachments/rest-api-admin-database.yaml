paths:

  /{db}/_config:
    put:
      operationId: "upsert_db_config"
      tags:
      - database
      - database2
      summary: Create or update a database configuration
      description: |+
        Use this endpoint to add a new Sync Gateway databases and-or to update the configuration of an existing database.

        Provide the database name in the URL path.
        Provide the required database configuration settings as a JSON object in the request body.
        For updates you only need to provide those settings you wish to change.

        By default the created database is brought online immediately, **unless** you include `"offline": true` in the configuration.

        NOTE: Changes made via REST API are persisted by default.
        This behavior can be changed by the command-line setting `disable_persistent_config`.

        `See: {rest-api-admin--xref}` for further information on this.
      parameters:
        - $ref: '#/parameters/db'
        - in: body
          name: body
          description: Database Configuration Settings
          required: true
          schema:
            $ref: '#/definitions/database_configuration_model'
      responses:
        200:
          description: 200 OK – The database configuration was updated successfully
        201:
          description: 201 Created – The database configuration was created successfully.

  /{db}/_config/import_filter:
    put:
      operationId: "upsert_import_filter"
      tags:
      - database
      summary: Upsert an import_filter function
      description: |+
        Use this convenience endpoint to create and-or update the `import_filter` Javascript function for this database.
      parameters:
        - $ref: '#/parameters/db'
        - $ref: '#/parameters/import_filter_body'

      responses:
        200:
          description: OK
          schema:
            $ref: '#/responses/200-import-filter'

  /{db}/_config/sync:
    put:
      operationId: "upsert_sync_function"
      tags:
      - access-control
      summary: Upsert a Sync Function
      description: |+
        Use this convenience endpoint to create and-or update the `Sync` Function for this database
      parameters:
        - $ref: '#/parameters/db'
        - $ref: '#/parameters/sync_function_body'
        # - in: body
        #   name: sync
        #   description: |+
        #     Access Control Sync Function
        #   required: true
        #   schema:
        #     $ref: "#/definitions/"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/responses/200-sync'

  /{db}/_role/{name}:
    put:
      operationId: "upsert_role"
      tags:
      - security
      summary: Role
      description: |+
        Use this convenience endpoint to upsert a Sync Gateway role for the specified database.
      parameters:
      - $ref: '#/parameters/db'
      - $ref: '#/parameters/role_name'
      - $ref: '#/parameters/role_body_upsert'

      responses:
        200:
          description: 200 OK – The role was updated successfully
        201:
          description: 201 Created – The role was created successfully

  /{db}/_user/{name}:
    put:
      operationId: "upsert_user"
      tags:
      - security
      summary: Creates or updates a user
      description: |+
        Use the `\_user` endpoint to create or update a Sync Gateway user for the specified database.
      parameters:
      - $ref: '#/parameters/db'
      - $ref: '#/parameters/name'
      - $ref: '#/parameters/user_body_upsert'
      responses:
        200:
          description: 200 OK – The user record was updated successfully
        201:
          description: 201 Created – The user record was created successfully

  /{db}/_replication/{replication_id}:
    put:
      operationId: "upsert_replication"
      tags:
      - replication
      description: |+
        Use the `\_replication` endpoint to upsert inter Sync Gateway configuration definitions

        Using a PUT request you can update or insert replication details for _ad hoc or _persistent_ replication operations.

      parameters:
      - $ref: '#/parameters/db'
      - $ref: '#/parameters/replication_id_upsert'
      - $ref: '#/parameters/replication_body_upsert'
