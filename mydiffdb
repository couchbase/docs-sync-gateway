diff --git a/modules/ROOT/assets/attachments/sg-database.yaml b/modules/ROOT/assets/attachments/configuration-properties-database.yaml
index 1949f3e6..3261a506 100644
--- a/modules/ROOT/assets/attachments/sg-database.yaml
+++ b/modules/ROOT/assets/attachments/configuration-properties-database.yaml
@@ -1,318 +1,249 @@
-type: object
-description: Database configuration settings
 properties:
-  databases:
-    this-db:
-      allow_conflicts:
-        type: boolean
+  database_configuration_model:
+    type: object
+    title: "Database Configuration Model"
+    description: |+
+      The `database_configuration_model` object defines the configuration of a given Sync Gateway database.
+    properties:
+      bucketConfig:
+        type: object
         description: |+
-          **Deprecated at 3.0 **
-
-          Use ```allow_conflict``` to define whether Sync Gateway will handle conflicts.
-
-          The default of ```true``` indicates that conflicts are handled.
-
-          Set the value to ```false``` to cause Sync Gateway to reject any attempt to write conflicting revisions (returning a `409` HTTP status code).
-          It will be up to the client to resolve the conflict.
-
-          Restarting Sync Gateway with this property enabled will not automatically result in disk space savings (compaction on a document won't occur until a document is updated).
+          " "
+#         See <<_bucket_configuration_model>>
 
-          *Constraints:*
-          - Push replications to pre-2.8 targets do not support the `"allow_conflicts": false` setting; the target must use `"allow_conflicts": true`.
-
-          Changes initiate a database restart.
-        default: 'true'
-      allow_empty_password:
-        type: boolean
-        description:
-          Use ```allow_empty_password``` to define whether to all Sync Gateway users to be created with empty passwords.
-        default: 'false'
-      bucket:
+      name:
         type: string
-        default: database name
-        description: |+
-          Use ```bucket``` to identify the Couchbase Server bucket name for this database.
-
-      bucket_op_timeout_ms:
-        type: integer
         description: |+
-          Use ```bucket_op_timeout_ms``` to define how long Sync Gateway will wait for a bucket operation to complete before timing out and trying again.
-
-          You may increase this value where there is a heavy load on Couchbase Server and operations are likely to take more than 2.5 seconds to complete.
+          Use `name` to define the Sync Gateway database name.
 
-          The default value is 2500 milliseconds.
+          Change initiates database restart
 
-          Changes initiate a database restart.
-        default: 2500
-      cacertpath:
+      sync:
         type: string
         description: |+
-          Use ```cacertpath``` to define the path (relative or absolute) to the root CA certificate used to verify the certificate chain and hostname of the Couchbase Server cluster.
+          Use the `sync` property to provision a Javascript Sync function that determines which users can access which documents.
 
-          Optional for X.509 authentication.
-          If it isn't provided, Sync Gateway will accept any certificate provided by Couchbase Server.
+          Provide the function in the API body as raw Javascript.
 
-          Changes initiate a database restart.
-      cache:
+          See also: [Sync Function](sync-function.html)
+
+        default: |+
+          `function(doc, oldDoc) {channel(doc.channels);}`
+
+      users:
         type: object
+        title: user_configuration_model
         description: |+
-          The ```cache``` group of properties define the cache configuration for this database
+          Defines the user(s) for this Sync Gateway database
         properties:
-          channel_cache:
-            type: object
+          name:
+            type: string
             description: |+
-              Channel cache configuration
+              The user name (the same name used in the URL path).
 
-              Changes to settings will require recreation of caches for dbContext
-            properties:
-              compact_high_watermark_pct:
-                type: integer
-                description: |+
-                  Use ```compact_high_watermark_pct``` to define the trigger value for starting channel cache eviction.
-                  Specify the value as a percentage (of ```max_number```)
+              The valid characters for a user name are alphanumeric ASCII characters and the underscore character.
 
-                  When the cache size, determined by `max_number`, reaches the high watermark, the eviction process iterates through the cache, removing inactive channels.
-                default: 80
-              compact_low_watermark_pct:
-                type: integer
-                description: |+
-                  Use ```compact_low_watermark_pct``` to define the trigger value for stopping channel cache eviction.
-                  Specify the value as a percentage (of ```max_number```)
+              The name property is required in a POST request.
 
-                  When the cache size, determined by `max_number` returns to a value lower than `compact_low_watermark_pct`, the cache eviction process is stopped.
-                default: 60
+              You donâ€™t need to include it in a PUT request because the user name is specified in the URL.
+          password:
+            type: string
+            description: |+
+              Password of the user.
 
-              enable_star_channel:
-                type: boolean
-                description: |+
-                  Use ```enable_star_channel``` to define whether Sync GAteway should use the all documents (*) channel -- sometimes referred to as the 'star' channel.
+              Mandatory, unless `allow_empty_password=true`.
 
-                default: 'true'
+          admin_channels:
+            type: array
+            description: |+
+              The channels that the user is able to access.
+            items:
+              type: string
+              description: |+
+                Channel name
 
-              expiry_seconds:
-                type: integer
-                description: |+
-                  Use ```expiry_seconds``` to define how long (in seconds) Sync Gateway should keep cached entries beyond the minimum retained.
-                default: 60
+          admin_roles:
+            type: array
+            description: |+
+              An array of the roles this user is associated with.
+            items:
+              type: string
+              description: Role name
 
-              max_length:
-                type: integer
-                description: |+
-                  Maximum number of entries maintained in cache per channel.
-                default: 500
+          all_channels:
+            type: array
+            description: |+
+              Shows the channels the user can access, as granted by the sync function.
 
-              max_num_pending:
-                type: integer
-                description: |+
-                  Use ```max_num_pending``` to define the maximum number of pending sequences before skipping the sequence.
-                default: 10000
+              This is a read-only property.
+              Changes to it are ignored.
+            readOnly: true
+            items:
+              type: string
+              description: Channel name
+          email:
+            type: string
+            description: |+
+              Email address of the user.
+          disabled:
+            type: boolean
+            description: |+
+              This property is usually not included.
 
-              max_number:
-                type: integer
-                description: |+
-                  Use ```max_number``` to define the maximum number of channel caches allowed at any one point.
-                  This property is used alongside the associated eviction watermarks ```compact_low_watermark_pct``` and ```compact_high_watermark_pct``` to control the cache size.
+              If the value is `true`, access for the account is disabled and the user will not be able to login.
+          roles:
+            type: array
+            readOnly: true
+            description: |+
+              Shows the roles this user is associated with by the Sync function.
 
-                  The default value for this property is 50000.
-                  Assuming the default channel `min_length` and `max_length` values, this would result in a memory usage under 1GB.
+              This is a read-only property.
+              Changes to it are ignored.
 
-                  Tuning this property is an [Enterprise Edition](https://www.couchbase.com/products/editions) feature -- in the Community Edition any change to the default value is ignored.
+            items:
+              type: string
+              description: Role name
 
-                  *Enterprise Edition Only*: The `max_number` value can be tuned to optimize for cache hits (requests that are handled using the cache), as opposed to cache misses (requests that require a round-trip to Couchbase Server to fetch data). The cache hit/miss ratio can be obtained with the following:
+      roles:
+        type: object
+        title: role_configuration_model
+        description: |+
+          Defines the role(s) for this Sync Gateway database
+        properties:
+          type: array
+          description: |+
+            Use the `role` property to define a Sync Gateway role
+          required:
+            - name
+          properties:
+            name:
+              type: string
+              description: |+
+                Name of the role
+            admin_channels:
+              type: array
+              description: |+
+                Array of channel names the role allows access to
+              items:
+                type: string
+            all_channels:
+              type: array
+              readOnly: true
+              description: |+
+                Lists all the channels the role has access to including any assigned by the `sync` function.
+
+                This is a derived property and changes to it are ignored.
+              items:
+                type: string
 
-                  ```cache hit/miss ratio``` = ```cache.chan_cache_hits``` / ```cache.chan_cache_misses```
+      revs_limit:
+        type: integer
+        description: |+
+          This property defines the maximum depth to which a document's revision tree can grow; its value governs the point at which to prune a document's revision tree.
 
-                  Increasing the `max_number` value can increase the cache hit/miss ratio, resulting in better cache utilization.
+          The default and minimum values of `revs_limit` are dependent on whether [allow_conflicts](config-properties.html#databases-this_db-allow_conflicts) is set True or False -- see the *Default and Minimum Values* table below.
 
-                  If the cache size grows to reach the high watermark (`compact_high_watermark_pct`), channels with no connected replications will be evicted before channels which are associated with an active pull replication (i.e a blip-based pull replication in Couchbase Lite 2.x, or an active `/{db}/_changes` request in Couchbase Lite 1.x).
+          The process to remove obsolete revisions is called pruning and runs automatically every time a revision is added. Although fundamentally the same, the pruning algorithm works slightly differently between Sync Gateway and Couchbase Lite. On Sync Gateway, the pruning algorithm is applied to the shortest, non-tombstoned branch in the revision tree.
 
-                  The minimum allowed value is 100.
+          If there are conflicting revisions, the document may end up with **disconnected branches** after the pruning process. In the animation below, the document has a conflicting branch (revisions `4'` - `1001'`). When the shortest branch (in this case the conflicting branch) reaches the 1003rd update, it gets is cut off. The revision tree is not in a corrupted state and the logic that chooses the winning revision still applies. But it may make it impossible to do certain merges (n-way merge) to resolve conflicts and will occupy disk space that could have been freed if the conflict was resolved early on.<br><br>
 
-                  It isn't possible to remove the limit altogether, users who wish to remove the limit would need to set `max_number` to an arbitrarily high value.
-                default: 50000
+          ![](https://cl.ly/3C1G3t3R1v19/pruning-sg.gif)
 
-              max_wait_pending:
-                type: integer
-                description: |+
-                  Maximum wait time in milliseconds for a pending sequence before skipping sequences.
-                default: 5000
+          If the revision tree gets into this state then the only option to resolve the conflict is to pick a winning branch and tombstone all the non-winning conflicting branches.
 
-              max_wait_skipped:
-                type: integer
-                description: |+
-                  Maximum wait time in milliseconds for a skipped sequence before abandoning the sequence.
-                default: 3600000
-              min_length:
-                type: integer
-                description: |+
-                  Minimum number of entries maintained in cache per channel.
-                default: 50
-              query_limit:
-                type: integer
-                default: 5000
-                description: Limit used for channel queries
+          **NOTE:** Setting the `revs_limit` to a value below 100 when `allow_conflicts = true` may adversely affect the conflict resolution process, as there may be insufficient revision history to resolve a given conflict.
 
-          rev_cache:
-            type: object
-            description: |+
-              Revision cache configuration
-            properties:
-              size:
-                type: integer
-                description: |+
-                  Size of the revision cache, specified as the total number of document revisions to cache in memory for all recently accessed documents. When the revision cache is full, Sync Gateway removes less recent document revisions to make room for new document revisions. Adjust this property to tune memory consumption by Sync Gateway, for example on servers with less memory and in cases when Sync Gateway creates many new documents and/or updates many documents relative to the number of read operations.
+          #### Default and Minimum Values
 
-                  ##### Disabling the revision cache
+          **For Releases 2.6+**
 
-                  Disabling the revision cache is an [Enterprise Edition](https://www.couchbase.com/products/editions) feature.
+          allow_conflicts =|+ True |+ False
+            :--- |+ :-------: |+ :-------:
+          `revs_limit` default |+ 100 |+ 50 |+
+          `revs_limit` minimum |+ 20 |+ 1 |+
 
-                  To disable the revision entirely, set this property to 0. Setting this property to 0 on the Community Edition is ignored.
+          **For Releases 2.0 - 2.5**
 
-                  Disabling the revision cache would be useful when there are very large documents or if you expect a very low cache hit rate. Otherwise it could negatively impact the latency of replications. It is generally not recommended to disable the revision cache, unless advised by Couchbase [Enterprise Support](https://www.couchbase.com/support-policy).
-                default: 5000
-              shard_count:
-                type: integer
-                description: |+
-                  Tuning this property is an [Enterprise Edition](https://www.couchbase.com/products/editions) feature.
-                  The Community Edition is configured with the default value, and will ignore any value in the configuration file.
+            allow_conflicts = |+ <-- True --> |+<-- False -->
+            :--- |+ :-------: |+ :-------:
+            `revs_limit` default  |+ 100 |+ 1000
+            `revs_limit` minimum  |+ 50 |+ 1
 
-                  Number of shards the rev cache should be split into. More shards allows for lower cache contention when accessing distinct revisions, at the cost of some memory overhead per-shard. This generally should not greatly exceed the number of CPU threads available to Sync Gateway.
+          **For Release 1.x**
+          - `revs_limit` default = 1000
+          - `revs_limit` minimum = 20
 
-                  It is generally not recommended to set this property, unless advised by Couchbase [Enterprise Support](https://www.couchbase.com/support-policy).
-                default: 8
-      certpath:
-        type: string
-        description: |+
-          Relative or absolute path to the client's certificate to authenticate against Couchbase Server 5.5 or higher. The private key must be specified with the `databases.$db.keypath` property.
+          See also:
+          - Sync Gateway purge endpoint [/{db}/_purge](admin-rest-api.html#/document/post__db___purge).
+          - Sync Gateway [document TTLs](admin-rest-api.html#/document/put__db___doc_).
 
-          Mode is static.
+          minimum -- see Default and Minimum Values table in description
 
-          Requires dbContext restart
-      compact_interval_days:
-        type: number
-        description: |+
-          Placeholder - to be completed
+        default: see Default and Minimum Values table in Description
 
-          Requires dbContext restart
-      delta_sync:
-        type: object
+      import_docs:
+        type: boolean
         description: |+
-          *NOTE:* Delta Sync is an Enterprise Edition feature on Sync Gateway and Couchbase Lite.
+          Use the `import_docs` property to define whether the Sync Gateway node should automatically import Couchbase Server documents;
 
-          Delta Sync is the ability to replicate only parts of the Couchbase mobile document that have changed. This can result in significant savings in bandwidth consumption as well as throughput improvements, especially when network bandwidth is typically constrained.
+          This property works in conjunction with the `enable_shared_bucket_access` property, which enables Xattrs.
 
-          Delta Sync incurs additional bucket storage requirements which can be tuned with the [`rev_max_age_seconds`](#databases-this_db-delta_sync-rev_max_age_seconds) property.
+          Since Sync Gateway 2.7, all Sync Gateway nodes can be configured as import nodes. This results in performance benefits as the import process is shared across all Sync Gateway nodes.
+          Prior to version 2.7, `import_docs` can only be set to `true` on a single node.
 
-          Delta Sync does not apply to attachment contents.
+          Changes initiate a database restart
 
-          Delta Sync is disabled by default on the Sync Gateway. You can enable it through the `enabled` property.
+        default: 'false'
 
-          If delta sync is enabled on Sync Gateway, then Couchbase Lite clients will switch to using delta sync automatically.
-          Similarly, if delta sync is disabled on Sync Gateway, clients will switch to normal mode.
+      import_partitions:
+        type: integer
+        description: |+
+          Use the `import_partitions` property to define how many import partitions should be used for import sharding.
 
-          *Note:* Push replications do not use Delta Sync when pushing to a pre-2.8 target.
+          Partitions are distributed among all Sync Gateway nodes participating in import processing (import_docs:true), and each process a subset of the server's vbuckets.
 
-          The following configuration example enables delta sync.
+          Each partition is processed by a separate goroutine, so `import_partitions` can be used to tune concurrency based on the number of Sync Gateway nodes, and the number of cores per node.
 
-          ```javascript
+        default: 16
+
+      import_filter:
+        type: string
+        description: |+
+          Use the `import_filter` property to define whether a document written to the Couchbase Server bucket should be made available to Couchbase Mobile clients (that is, it should be imported).
+
+          This JavaScript filter function takes the document body as parameter and is expected to return a boolean to indicate whether the document should be imported.
+
+          ```json
           {
-            "logging": {
-              "console": {
-                "log_keys": ["*"]
-              }
-            },
             "databases": {
               "db": {
                 "server": "http://localhost:8091",
                 "bucket": "default",
-                "users": { "GUEST": { "disabled": false, "admin_channels": ["*"] } },
-                "allow_conflicts": false,
-                "revs_limit": 20,
-                "delta_sync": {
-                  "enabled": true,
-                  "rev_max_age_seconds": 86400
+                "password": "password",
+                "import_docs": true,
+                "enable_shared_bucket_access": true,
+                "import_filter": `
+              function(doc) {
+                if (doc.type != "mobile") {
+                  return false
                 }
+                return true
+              }
+              `,
               }
             }
           }
           ```
+        default: function(doc) {return false;}
 
-          Footnotes:
-
-          - Delta Sync is automatically enabled for peer-to-peer sync between Couchbase Lite clients.
-          - Delta sync is disabled for Couchbase Lite database replicas.
-
-          Mode is static.
-        properties:
-          enabled:
-            type: boolean
-            description: Set this property to "true" to enable delta sync.
-            default: 'false'
-          rev_max_age_seconds:
-            type: integer
-            description: |+
-              On a write operation, the revision body is backed up in the bucket and retained for `rev_max_age_seconds` to calculate future revision deltas.
-              As a result, new deltas can only be generated for read requests that come in within the `rev_max_age_seconds` time window.
-              The storage of backed up revision bodies for delta sync incurs additional bucket storage requirements.
-
-              The additional storage can be calculated with the following formula: `(doc_size * updates_per_day * 86400) / rev_max_age_seconds`.
-
-              For example, with `rev_max_age_seconds`'s default value, an average document size of 4 KB and 100 writes/day, enabling delta sync would take up an additional 400 KB of storage on Couchbase Server (`(4 * 100 * 86400)/86400`).
-
-              Setting this value to 0 will generate deltas opportunistically on pull replications, with no additional storage requirements.
-            default: 86400
-      enable_shared_bucket_access:
-        type: boolean
+      import_backup_old_rev:
+        type: string
         description: |+
-          **Deprecated at 3.0**
-
-          This property specifies whether to enable Mobile-Server Data Sync (a.k.a _mobile convergence_).
-
-          You can learn more about this functionality in [Syncing Mobile and Server](./../shared-bucket-access.html)
-
-          This property works in conjunction with the [import_docs](#databases-foo_db-import_docs) property, which determines whether a node participates in import processing.
-
-          Set `enable_shared_bucket_access` to `true` on all nodes participating in such a configuration.
-
-          On start-up, Sync Gateway will generate the mobile-specific metadata for all the pre-existing documents in the Couchbase Server bucket. From then on, documents can be inserted on the Server directly (with N1QL or SDKs) or through the Sync Gateway REST API.
-
-          #### Tombstones
-
-          When `enable_shared_bucket_access` is enabled, mobile tombstones are now also server tombstones. The document body is deleted, and only the mobile sync metadata required to replicate the tombstone is retained in the mobile extended attribute.
-
-          The server's metadata purge interval becomes an important consideration for mobile deployments under convergence. When the server purges a tombstone (based on the metadata purge interval), that tombstone will no longer be replicated to mobile clients.
-
-          Users should set the server's metadata purge interval based on their expected client replication frequency, to ensure that clients are notified of the tombstone prior to that tombstone being purged.
-
-          NOTE: The default Metadata Purge Interval is set to 3 days which can potentially result in tombstones being purged before all clients have had a chance to get notified of it.
-
-          Ways to tune the Metadata Purge Interval on Couchbase Server:
+          Use the `import_backup_old_rev` property to define whether import should attempt to create a temporary backup of the previous revision body, when available
 
-          - Bucket settings [on UI](https://docs.couchbase.com/server/current/manage/manage-settings/configure-compact-settings.html)
-          - Bucket endpoint [on the REST API](https://docs.couchbase.com/server/current/rest-api/rest-bucket-create.html)
-
-          #### Implementation notes for XATTRs:
-
-          Mobile applications require additional metadata in order to manage security and replication. In previous versions of Sync Gateway, this information has always been stored in the document body. Sync Gateway 1.5 utilizes a new feature of Couchbase Server 5.0 called XATTRs (x-attributes) to store that metadata into an external document fragment.
-
-          Extended attributes (xattrs) are JSON objects that can be associated with Couchbase documents. Each document can be associated with zero or more extended attributes. There are currently three types (user, system, virtual). Mobile Convergence uses a system extended attribute, which has the following characteristics central to convergence:
-
-            - Shares lifetime with the document metadata - when a document is deleted, system xattrs are preserved with the tombstone.
-            - Allocated 1MB of storage, independent of the 20MB available for the document
-
-          Extended attributes are stored as part of the document, and are replicated with the document (both intra-cluster replication and XDCR).
-
-          Extended attributes can be accessed via the SDKs using the sub-document API, via command-line tools, and via views.
-
-          They are also accessible from N1QL in Couchbase Server 5.5 or above with the `().xattrs` property. For example, `SELECT meta().xattrs._sync from travel-sample where Meta().id = "user::demo";`.
-
-          **WARNING:** The sync metadata is maintained internally by Sync Gateway and its structure can change at any time. It should not be used to drive business logic of applications. The direct use of the N1QL query is unsupported and must not be used in production environments.
-          The `raw` endpoint ([/db/_raw/{docid}](../../../references/sync-gateway/admin-rest-api/index.html#!/document/get_db_raw_doc)) on Sync Gateway's Admin REST API returns both the document and it's associated mobile metadata.
-
-          Changes initiate database restart
-        default: 'false'
       event_handlers:
         type: object
+        title: "Event Handler Model"
         description: |+
           Webhooks in Sync Gateway are designed to minimize performance impacts on Sync Gateway's regular processing.
 
@@ -326,14 +257,15 @@ properties:
 
           You can configure Sync Gateway to log information about event handling, by including either the log key ```Event``` or ```Events+``` in the `Log` property in your Sync Gateway configuration file. `Events+` is more verbose.
 
-          See also: [WebHooks](webhooks.html)
+          See also: {webhooks--xref}
 
         properties:
           document_changed:
             description: The configuration for the action to perform when a document change is detected.
             type: array
             items:
-              type: object
+              # type: object
+              title: "Document Changed Model"
               properties:
                 filter:
                   type: string
@@ -342,16 +274,19 @@ properties:
 
                     The filter function accepts the document body as input and returns a boolean value.
 
-                    - If the filter function returns true, then Sync Gateway posts the document.
-                    - If the filter function returns false, then Sync Gateway does not post the document.
-                    - If no filter function is defined, then Sync Gateway posts all changed documents.
+                    -- If the filter function returns true, then Sync Gateway posts the document.
+                    -- If the filter function returns false, then Sync Gateway does not post the document.
+                    -- If no filter function is defined, then Sync Gateway posts all changed documents.
 
                     Filtering only determines which documents to post.
                     It does not extract specific content from documents and post only that.
                   # required: 'true'
                 handler:
                   type: string
-                  description: Type of the event handler. This must be `"webhook"` (only 1 possible value currently).
+                  description: |+
+                    Specify the type of event handler.
+
+                    This must be `webhook` currently).
                 options:
                   type: string
                   description: |+
@@ -375,31 +310,37 @@ properties:
                   type: string
                   # required: true
           db_state_changed:
-            description: The configuration for the action to perform when a db_state change is detected.
             type: array
+            description: |+
+                Use the `db_state_changed` property group to define the actions to perform when a `db_state` change is detected.
             items:
+              title: db_state_changed model
               type: object
               properties:
                 filter:
                   type: string
                   description: |+
-                  # required: 'true'
+                    Use `db_state_changed.filter``` to define a JavaScript function that determines which state changes to post.
+
                 handler:
                   type: string
-                  description:
-                    placeholder
+                  description: |+
+                    Specify the type of event handler.
+
+                    This must be `webhook` currently).
                 options:
                   type: string
                   description: |+
-                    placeholder
+                    Options can be specified per-handler, and are specific to each handler type.
                 timeout:
                   type: integer
                   description: |+
-                    placeholder
+                    Defines the period in seconds to wait for a response to the operation.
+
                   default: 60
                 url:
                   description: |+
-                    placeholder
+                    Defines the URL to post to (for a webhook event handler).
                   type: string
                   # required: true
           max_processes:
@@ -422,177 +363,326 @@ properties:
 
               The default value should work well in the majority of cases. You should not need to adjust it to tune performance.
             default: 100
-      import_backup_old_rev:
-        type: string
-        description: |+
-          Placeholder -- to be completed
-      import_docs:
+      allow_empty_password:
         type: boolean
+        description:
+          Use ```allow_empty_password``` to define whether to Sync Gateway users can be created with empty passwords.
+        default: 'false'
+
+      cache:
+        type: object
+        title: "Cache Model"
         description: |+
-          Introduced in Sync Gateway 1.5, this property specifies whether this Sync Gateway node should perform import processing.
+          The `cache` group of properties define the  configuration for this database's channel and revision caches
 
-          This property works in conjunction with the [enable_shared_bucket_access](#databases-this_db-enable_shared_bucket_access) property.
+        properties:
+          rev_cache:
+            type: object
+            title: "Revision Cache Model"
+            description: |+
+              Use the `rev_cache` properties to configure the revision cache
+            properties:
+              size:
+                type: integer
+                description: |+
+                  Size of the revision cache, specified as the total number of document revisions to cache in memory for all recently accessed documents. When the revision cache is full, Sync Gateway removes less recent document revisions to make room for new document revisions. Adjust this property to tune memory consumption by Sync Gateway, for example on servers with less memory and in cases when Sync Gateway creates many new documents and/or updates many documents relative to the number of read operations.
 
-          Starting in Sync Gateway 2.7, all Sync Gateway nodes can be configured as import nodes. This results in performance benefits as the import process is shared across all Sync Gateway nodes.
+                  *Disabling the revision cache*
 
-          Prior to version 2.7, `import_docs` can only be set to `true` on a single node.
+                  Disabling the revision cache is an [Enterprise Edition](https://www.couchbase.com/products/editions) feature.
 
-          #### Workload Isolation
+                  To disable the revision entirely, set this property to 0. Setting this property to 0 on the Community Edition is ignored.
 
-          Starting in version 2.7, if `enable_shared_bucket_access` is set to `true` and `import_docs` is set to `false`, the node will not be participating in the import process.
+                  Disabling the revision cache would be useful when there are very large documents or if you expect a very low cache hit rate. Otherwise it could negatively impact the latency of replications. It is generally not recommended to disable the revision cache, unless advised by Couchbase [Enterprise Support](https://www.couchbase.com/support-policy).
+                default: 5000
+              shard_count:
+                type: integer
+                description: |+
+                  Tuning this property is an [Enterprise Edition](https://www.couchbase.com/products/editions) feature.
+                  The Community Edition is configured with the default value, and will ignore any value in the configuration file.
 
-          This configuration is specifically recommended for workload isolation: to isolate import nodes from the client-facing nodes. Workload isolation is preferable in deployments with a large write throughput.
+                  Number of shards the rev cache should be split into. More shards allows for lower cache contention when accessing distinct revisions, at the cost of some memory overhead per-shard. This generally should not greatly exceed the number of CPU threads available to Sync Gateway.
 
-          Prior to Release 2.1 a value of 'continuous' was also allowed. This was deprecated at Release 2.1 and replaced with the boolean value True. There is no change to the behavior or functionality (that is, a value of 'continuous' was interpreted as True and had the same effect).
+                  It is generally not recommended to set this property, unless advised by Couchbase [Enterprise Support](https://www.couchbase.com/support-policy).
+                default: 8
 
-          Mode is static.
+          channel_cache:
+            type: object
+            title: "Channel Cache Model"
+            description: |+
+              Use the `channel_cache` group's properties to configure the database's channel cache
 
-        default: 'false'
+              Changes initiate a database restart
+            properties:
+              compact_high_watermark_pct:
+                type: integer
+                description: |+
+                  Use ```compact_high_watermark_pct``` to define the trigger value for starting channel cache eviction.
+                  Specify the value as a percentage (of ```max_number```)
 
-      import_filter:
-        type: string
-        description: |+
-          JavaScript filter function to determine if a document written to the Couchbase Server bucket should be made available to Couchbase Mobile clients (i.e imported). The filter function takes the document body as parameter and is expected to return a boolean to indicate whether the document should be imported.
+                  When the cache size, determined by `max_number`, reaches the high watermark, the eviction process iterates through the cache, removing inactive channels.
+                default: 80
+              compact_low_watermark_pct:
+                type: integer
+                description: |+
+                  Use ```compact_low_watermark_pct``` to define the trigger value for stopping channel cache eviction.
+                  Specify the value as a percentage (of ```max_number```)
 
-          ```json
-          {
-            "databases": {
-              "db": {
-                "server": "http://localhost:8091",
-                "bucket": "default",
-                "password": "password",
-                "import_docs": true,
-                "enable_shared_bucket_access": true,
-                "import_filter": `
-              function(doc) {
-                if (doc.type != "mobile") {
-                  return false
-                }
-                return true
-              }
-              `,
-              }
-            }
-          }
-          ```
-        default: function(doc) {return false;}
+                  When the cache size, determined by `max_number` returns to a value lower than `compact_low_watermark_pct`, the cache eviction process is stopped.
+                default: 60
 
-      import_partitions:
-        type: integer
-        description: |+
-          Allows users to tune the number of partitions used for import processing. Partitions are distributed among all Sync Gateway nodes participating in import processing (import_docs:true), and each process a subset of the server's vbuckets.
+              enable_star_channel:
+                type: boolean
+                description: |+
+                  Use ```enable_star_channel``` to define whether Sync GAteway should use the all documents (*) channel -- sometimes referred to as the 'star' channel.
 
-          Each partition is processed by a separate goroutine, so import_partitions can be used to tune concurrency based on the number of Sync Gateway nodes, and the number of cores per node.
-        default: 16
-      isgr_enabled:
+                default: 'true'
+
+              expiry_seconds:
+                type: integer
+                description: |+
+                  Use ```expiry_seconds``` to define how long (in seconds) Sync Gateway should keep cached entries beyond the minimum retained.
+                default: 60
+
+              max_length:
+                type: integer
+                description: |+
+                  Maximum number of entries maintained in cache per channel.
+                default: 500
+
+              max_num_pending:
+                type: integer
+                description: |+
+                  Use ```max_num_pending``` to define the maximum number of pending sequences before skipping the sequence.
+                default: 10000
+
+              max_number:
+                type: integer
+                description: |+
+                  Use ```max_number``` to define the maximum number of channel caches allowed at any one point.
+                  This property is used alongside the associated eviction watermarks ```compact_low_watermark_pct``` and ```compact_high_watermark_pct``` to control the cache size.
+
+                  The default value for this property is 50000.
+                  Assuming the default channel `min_length` and `max_length` values, this would result in a memory usage under 1GB.
+
+                  Tuning this property is an [Enterprise Edition](https://www.couchbase.com/products/editions) feature -- in the Community Edition any change to the default value is ignored.
+
+                  *Enterprise Edition Only*: The `max_number` value can be tuned to optimize for cache hits (requests that are handled using the cache), as opposed to cache misses (requests that require a round-trip to Couchbase Server to fetch data). The cache hit/miss ratio can be obtained with the following:
+
+                  ```cache hit/miss ratio``` = ```cache.chan_cache_hits``` / ```cache.chan_cache_misses```
+
+                  Increasing the `max_number` value can increase the cache hit/miss ratio, resulting in better cache utilization.
+
+                  If the cache size grows to reach the high watermark (`compact_high_watermark_pct`), channels with no connected replications will be evicted before channels which are associated with an active pull replication (i.e a blip-based pull replication in Couchbase Lite 2.x, or an active `/{db}/_changes` request in Couchbase Lite 1.x).
+
+                  The minimum allowed value is 100.
+
+                  It isn't possible to remove the limit altogether, users who wish to remove the limit would need to set `max_number` to an arbitrarily high value.
+                default: 50000
+
+              max_wait_pending:
+                type: integer
+                description: |+
+                  Maximum wait time in milliseconds for a pending sequence before skipping sequences.
+                default: 5000
+
+              max_wait_skipped:
+                type: integer
+                description: |+
+                  Maximum wait time in milliseconds for a skipped sequence before abandoning the sequence.
+                default: 3600000
+              min_length:
+                type: integer
+                description: |+
+                  Minimum number of entries maintained in cache per channel.
+                default: 50
+              query_limit:
+                type: integer
+                default: 5000
+                description: Limit used for channel queries
+
+      offline:
         type: boolean
-        default: 'true'
         description: |+
-          By default, this Sync Gateway node can be assigned inter-Sync Gateway replications for this database.
+          Use `offline` to determine whether Sync Gateway should start the database in offline mode.
 
-          If set to false, this Sync Gateway node will not participate in inter-Sync Gateway replications.
-      isgr_websocket_heartbeat_secs:
-        type: integer
-        default: 300
-        description: |+
-          If set, this duration (in seconds) is used as a custom heartbeat interval for websocket ping frames in inter-Sync Gateway replications.
-      keypath:
-        type: string
+          The default of false means the database will be online.
+        default: false
+
+      unsupported:
+        title: "Unsupported Properties Model"
+        type: object
         description: |+
-          Relative or absolute path to the client's private key to authenticate against Couchbase Server 5.5 or higher. The client certificate must be specified with the `databases.$db.certpath` property.
+          This group comprises an unrelated collection of unsupported properties that may, potentially, be useful in controlled testing scenarios.
 
-          Mode is static.
+          NOTE: Due to the unsupported nature of these options, there is no guarantee on their continued availability.
+        properties:
+          api_endpoints:
+            type: object
+            properties:
+              enable_couchbase_bucket_flush:
+                type: boolean
+                description: |+
+                  Determines whether Couchbase buckets can be flushed using the Admin REST API.
 
-          Change initiates database restart
-      kv_tls_port:
-        type: string
-        description: |+
-          Placeholder - to be completed
-      local_doc_expiry_secs:
-        type: integer
-        description: |+
-          Starting in Sync Gateway 2.0, it is possible to set an expiry value for local documents managed on Sync Gateway.
+                  Use *only* for testing purposes if it is necessary to flush data in between tests to start with a clean DB.
 
+          oidc_tls_skip_verify:
+            type: boolean
+            default: 'false'
+            description: |+
+              Unsupported option for use in development and testing environment ONLY
 
-          Local documents are used by the Couchbase Lite replicator to track up to which sequence number a given client has synchronized and where it should resume the next time it connects to Sync Gateway.
+              `oidc_tls_skip_verify` can be used to enable the use of self-signed certs for OpenID Connection testing.
 
-          Clients that don't replicate within the expiry window will be forced to restart their replication from the beginning (sequence zero).
+          oidc_test_provider:
+            type: object
+            description:  Config settings for OIDC test provider
+            properties:
+              enabled:
+                type: boolean
+                description: |+
+                  Unsupported option for use in development and testing environment ONLY
 
-          This property is intended to minimize accumulation of obsolete replication checkpoint documents in the Couchbase Server bucket.
+                  Determines whether the oidc_test_provider endpoints should be exposed on the public API.
+          remote_config_tls_skip_verify:
+            type: boolean
+            default: 'false'
+            description: |+
+              Unsupported option for use in development and testing environment ONLY
+
+              Use only to enable self signed certificates for testing external JavaScript load.
+          sgr_tls_skip_verify:
+            type: boolean
+            default: 'false'
+            description: |+
+              Unsupported option for use in development and testing environment ONLY
+
+              `sgr_tls_skip_verify` can be used to skip validation of TLS certs used for Inter-Sync Gateway Replication.
+
+          user_views:
+            type: object
+            description: Configuration settings for user views
+            default: 'none'
+            properties:
+              user_views_enabled:
+                type: boolean
+                description: |+
+                  Unsupported option for use in development and testing environment ONLY
+
+                  Use to determine whether pass-through view query is supported through public API
+
+          warning_thresholds:
+            type: object
+            title: "Warning Threshold Model"
+            properties:
+              access_and_role_grants_per_doc:
+                type: boolean
+                description: |+
+                  Number of access and role grants per document to be used as a threshold for grant count warnings
+              channels_per_doc:
+                type: boolean
+                description: |+
+                  Number of channels per document to be used as a threshold for channel count warnings
+              channels_per_user:
+                type: boolean
+                description: |+
+                  Number of channels per user to be used as a threshold for channel count warnings
+              channel_name_size:
+                type: boolean
+                description: |+
+                  Number of channel name characters to be used as a threshold for channel name warnings
 
-          Default -- `7776000` (90 days).
-        default: 7776000
-      name:
-        type: string
-        description: |+
-          Use ```name``` to define the Sync Gateway database name.
 
-          Change requires database restart
-      num_index_replicas:
-        type: integer
-        description: |+
-          Determines the number of index replicas used when creating the core Sync Gateway indexes. This property is only applicable if `databases.$db.use_views` is set to `false` (default value).
+              xattr_size_bytes:
+                type: boolean
+                description: |+
+                  Number of bytes to be used as a threshold for XATTR size limit warnings
+          disable_clean_skipped_query:
+            type: boolean
+            description: Clean skipped sequence processing bypasses final check
 
-          Requires db restart
-        default: 1
-      offline:
-        type: boolean
-        description: |+
-          Start the database offline
-        default: false
       oidc:
         type: object
-        description: OIDC providers.
+        title: "OIDC Group Model"
+        description: |+
+          Use the `oidc` object properties to defined any OpenID Connect providers and associated credentials.
         properties:
           default_provider:
             type: string
             description: |+
-              Use this group to  define the provider to use for OIDC requests not specifying a provider.
-
-              If only one provider is specified in the providers map, it is used as the default provider.
+              Use this `default_provider` property to identify the provider to use for OIDC requests that do not specify a provider.
 
+              If only one provider is specified in the providers map, then that is used as the default provider.
               If multiple providers are defined and default_provider is not specified, requests to ```/db/_oidc``` must specify the provider parameter.
+
           providers:
+            title: "OIDC Providers Model"
+            description: Include an entry for each OIDC provider
             type: object
             properties:
               this_provider:
+                title: "OIDC Provider Model"
                 type: object
                 properties:
+
                   issuer:
                     type: string
                     description: The OpenID Connect Provider issuer.
+
+                  register:
+                    type: string
+                    description: |+
+                      Whether Sync Gateway should automatically create users for successfully authenticated users that don't have an already existing user in Sync Gateway.
+
+                      Optional.
+
                   client_id:
                     type: string
                     description: The client ID defined in the provider for Sync Gateway.
+
                   validation_key:
                     type: string
                     description: Client secret associated with the client. Required for auth code flow.
-                  signing_method:
-                    type: string
-                    description: Optional. Signing method used for validation key (provides additional security).
+
                   callback_url:
                     type: string
-                    description: Optional. The callback URL to be invoked after the end-user obtains a client token. When not provided, Sync Gateway will generate it based on the incoming request.
-                  register:
-                    type: string
-                    description: Optional. Whether Sync Gateway should automatically create users for successfully authenticated users that don't have an already existing user in Sync Gateway.
+                    description: |+
+                      The callback URL to be invoked after the end-user obtains a client token.
+                      When not provided, Sync Gateway will generate it based on the incoming request.
+
+                      *Optional*
+
                   disable_session:
                     type: string
-                    description: Optional. By default, Sync Gateway will create a new session for the user upon successful OIDC authentication, and set that session in the usual way on the _oidc_callback and _oidc_refresh responses. If disable_session is set to true, the session is not created (clients must use the ID token for subsequent authentications).
+                    description: |+
+                      By default, Sync Gateway will create a new session for the user upon successful OIDC authentication, and set that session in the usual way on the _oidc_callback and _oidc_refresh responses.
+
+                      If disable_session is set to true, the session is not created (clients must use the ID token for subsequent authentications).
+
+                      *Optional*
+
                   scope:
-                    type: array
-                    description: Optional. By default, Sync Gateway uses the scope "openid email" when calling the OP's authorize endpoint. If the scope property is defined in the config (as an array of string values), it will override this scope.
-                    items:
-                      type: string
+                    type: [string]
+                    description: |+
+                      By default, Sync Gateway uses the scope "openid email" when calling the OP's authorize endpoint.
+
+                      If the scope property is defined in the config (as an array of string values), it will override this scope.
+
+                      *Optional. *
+
                   include_access:
                     type: string
                     description: Optional. When true, the oidccallback response will include the access_token, expires_at and token_type properties returned by the OP.
+
                   user_prefix:
                     type: string
                     description: Optional. Specifies the prefix for Sync Gateway usernames for the provider. When not specified, defaults to issuer.
+
                   discovery_url:
                     type: string
                     description: Optional. Discovery URL used to obtain the OpenID Connect provider configuration. If not specified, the default discovery endpoint of [issuer]/.well-known/openid-configuration will be used.
+
                   disable_cfg_validation:
                     default: 'false'
                     type: boolean
@@ -600,6 +690,7 @@ properties:
                       Couchbase Sync Gateway, by default, applies strict validation of the OpenID Connect configuration based on the OIDC specification.
 
                       Set ```"disable_cfg_validation": true``` when you do not want strict validation of the OIDC configuration.
+
                   disable_callback_state:
                     default: 'false'
                     type: boolean
@@ -630,6 +721,7 @@ properties:
                         - If username_claim is set and user_prefix is also set, use [user_prefix]_[username_claim] as the Sync Gateway username.
                         - If username_claim is not set and user_prefix is set, use [user_prefix]_[subject] as the Sync Gateway username (existing behavior).
                         - If neither username_claim nor user_prefix are set, use [issuer]_[subject] as the Sync Gateway username (existing behavior).
+
                   allow_unsigned_provider_tokens:
                     type: boolean
                     default: 'false'
@@ -637,84 +729,74 @@ properties:
                       Unsigned provider tokens are not accepted.
 
                       Set ```"allow_unsigned_provider_tokens": true``` to opt-in to accepting unsigned tokens from providers.
+
       old_rev_expiry_seconds:
         type: integer
         description: |+
-          Placeholder -- to be completed
-      password:
-        type: string
-        description: |+
-          Placeholder -- to be completed
+          Use the `old_rev_expiry_seconds` property to define the number of seconds before old revisions are removed from Couchbase Server buckets.
 
-          Mode is static.
-
-          Requires dbContext restart
-      query_pagination_limit:
+      view_query_timeout_secs:
         type: integer
         description: |+
-          Placeholder -- to be completed
+          Use the `view_query_timeout_secs` property to define the view query timeout in seconds.
 
-          Mode is static.
-      revs_limit:
+          This is the time Sync Gateway should wait for a view query response from Couchbase Server before it times out.
+
+          The timeout applies to both view and N1QL queries issued by Sync Gateway.
+        default: 75
+
+      local_doc_expiry_secs:
         type: integer
         description: |+
-          This property defines the maximum depth to which a document's revision tree can grow; its value governs the point at which to prune a document's revision tree.
+          Use the `local_doc_expiry_secs` property to define an expiry value for local documents managed on Sync Gateway.
 
-          The default and minimum values of `revs_limit` are dependent on whether [allow_conflicts](config-properties.html#databases-this_db-allow_conflicts) is set True or False -- see the *Default and Minimum Values* table below.
+          Local documents are used by the Couchbase Lite replicator to track up to which sequence number a given client has synchronized and where it should resume the next time it connects to Sync Gateway.
 
-          The process to remove obsolete revisions is called pruning and runs automatically every time a revision is added. Although fundamentally the same, the pruning algorithm works slightly differently between Sync Gateway and Couchbase Lite. On Sync Gateway, the pruning algorithm is applied to the shortest, non-tombstoned branch in the revision tree.
+          Clients failing to replicate within the expiry window are forced to restart their replication from the beginning (sequence zero).
 
-          If there are conflicting revisions, the document may end up with **disconnected branches** after the pruning process. In the animation below, the document has a conflicting branch (revisions `4'` - `1001'`). When the shortest branch (in this case the conflicting branch) reaches the 1003rd update, it gets is cut off. The revision tree is not in a corrupted state and the logic that chooses the winning revision still applies. But it may make it impossible to do certain merges (n-way merge) to resolve conflicts and will occupy disk space that could have been freed if the conflict was resolved early on.<br><br>
+          This property is intended to minimize accumulation of obsolete replication checkpoint documents in the Couchbase Server bucket.
 
-          ![](https://cl.ly/3C1G3t3R1v19/pruning-sg.gif)
+          The default is `7776000` seconds (90 days).
+        default: 7776000
 
-          If the revision tree gets into this state then the only option to resolve the conflict is to pick a winning branch and tombstone all the non-winning conflicting branches.
+      enable_shared_bucket_access:
+        type: boolean
+        description: |+
+          **Deprecated at 3.0**
 
-          **NOTE:** Setting the `revs_limit` to a value below 100 when `allow_conflicts = true` may adversely affect the conflict resolution process, as there may be insufficient revision history to resolve a given conflict.
+          use the `enable_shared_bucket_access` property to define whether to use extended attributes to store sync metadata; this is required to enable mobile-to-server data sync (_mobile convergence_).
 
-          #### Default and Minimum Values
+          You can learn more about this functionality in [Syncing with Couchbase Server](sync-with-couchbase-server.html)
 
-          **For Releases 2.6+**
+          This property works in conjunction with the  ```import_docs``` property, which determines whether a node participates in import processing.
 
-          allow_conflicts =|+ True |+ False
-            :--- |+ :-------: |+ :-------:
-          `revs_limit` default |+ 100 |+ 50 |+
-          `revs_limit` minimum |+ 20 |+ 1 |+
+          Set `enable_shared_bucket_access` to `true` on all nodes participating in such a configuration.
 
-          **For Releases 2.0 - 2.5**
+          On start-up, Sync Gateway will generate the mobile-specific metadata for all the pre-existing documents in the Couchbase Server bucket. From then on, documents can be inserted on the Server directly (with N1QL or SDKs) or through the Sync Gateway REST API.
 
-            allow_conflicts = |+ <-- True --> |+<-- False -->
-            :--- |+ :-------: |+ :-------:
-            `revs_limit` default  |+ 100 |+ 1000
-            `revs_limit` minimum  |+ 50 |+ 1
+          Change initiates a database restart
+        default: 'false'
 
-          **For Release 1.x**
-          - `revs_limit` default = 1000
-          - `revs_limit` minimum = 20
+      session_cookie_secure:
+        type: boolean
+        default: 'true'
+        description: |+
+          Override secure cookie flag (that is, disable secure cookies).
 
-          See also:
-          - Sync Gateway purge endpoint [/{db}/_purge](admin-rest-api.html#/document/post__db___purge).
-          - Sync Gateway [document TTLs](admin-rest-api.html#/document/put__db___doc_).
+          If SSLCert is set, then secure cookies are also used by default. However, this flag can be set `false` to override this behavior and allow insecure cookies to be used alongside SSL.
 
-          minimum -- see Default and Minimum Values table in description
+          If SSLCert is not set then this flag defaults to false.
 
-        default: see Default and Minimum Values table in Description
-      send_www_authenticate_header:
-        type: boolean
-        description: Whether to send WWW-Authenticate header in 401 responses.
-        default: 'true'
-      serve_insecure_attachment_types:
-        type: boolean
-        default: 'false'
-        description: If an attachment has headers such as "text/html" where it would attempt to render in a browser Sync Gateway will force a download by sending content-disposition header. Setting this option to false will instead not set the content-disposition and allow a browser to render the attachment.
-      session_cookie_http_only:
-        type: boolean
-        default: 'false'
-        description:  This flag disallows cookies from being used by Javascript; by default javascript CAN use them
       session_cookie_name:
         type: string
         description: |+
-          Starting in Sync Gateway 2.0, it is possible to customize the session cookie name that is used for this database. This configuration property is primarly used for web applications interacting with multiple Sync Gateway **databases**. Browsers typically have two methods of determining which cookie to use for a given request: the `URL` path or cookie name. With this property, you can use different cookie names for each database specified in the configuration file. Let's consider the following configuration file:
+          Starting in Sync Gateway 2.0, it is possible to customize the session cookie name that is used for this database.
+
+          This property is mostly used by web applications interacting with multiple Sync Gateway databases.
+
+          Browsers typically have two methods of determining which cookie to use for a given request: the `URL` path, or the cookie name.
+
+          Use this property, to set different cookie names for each database specified in the configuration file. Let's consider the following configuration file:
 
           ```json
           {
@@ -750,533 +832,335 @@ properties:
           document.cookie = cookie1String;
           ```
         default: 'SyncGatewaySession'
-      session_cookie_secure:
+
+      session_cookie_http_only:
         type: boolean
+        default: 'false'
+        description:  This flag disallows cookies from being used by Javascript; by default javascript CAN use them
+
+      allow_conflicts:
+        type: boolean
+        description: |+
+          **Deprecated at 3.0 **
+
+          Use ```allow_conflict``` to define whether Sync Gateway will handle conflicts.
+
+          The default of ```true``` indicates that conflicts are handled.
+
+          Set the value to ```false``` to cause Sync Gateway to reject any attempt to write conflicting revisions (returning a `409` HTTP status code).
+          It will be up to the client to resolve the conflict.
+
+          Restarting Sync Gateway with this property enabled will not automatically result in disk space savings (compaction on a document won't occur until a document is updated).
+
+          *Constraints:*
+          - Push replications to pre-2.8 targets do not support the `"allow_conflicts": false` setting; the target must use `"allow_conflicts": true`.
+
+          Change initiates a database restart.
         default: 'true'
+
+      num_index_replicas:
+        type: integer
         description: |+
-          Override secure cookie flag (that is, disable secure cookies).
+          use `num_index_replicas` property to define the number of index replicas used when creating the core Sync Gateway indexes.
 
-          If SSLCert is set, then secure cookies are also used by default. However, this flag can be set `false` to override this behavior and allow insecure cookies to be used alongside SSL.
+          Only applicable if `databases.$db.use_views` is set to `false` (default value).
 
-          If SSLCert is not set then this flag defaults to false.
+          Change initiates a database restart.
+        default: 1
 
-      slow_query_warning_threshold:
+      use_views:
+        type: boolean
+        description: |+
+          If set to `true`, Sync Gateway will use views instead of GSI for system functions like authentication and replication.
+        default: 'false'
+
+      send_www_authenticate_header:
+        type: boolean
+        description: Whether to send WWW-Authenticate header in 401 responses.
+        default: 'true'
+
+      bucket_op_timeout_ms:
         type: integer
-        default: 500
         description: |+
-          The maximum wait time, in milliseconds,for N1QL or View queries made by Sync Gateway
+          Use ```bucket_op_timeout_ms``` to define how long Sync Gateway will wait for a bucket operation to complete before timing out and trying again.
 
-          Log warnings if the run time of a N1QL or View query, made by Sync Gateway, exceeds this value.
+          You may increase this value where there is a heavy load on Couchbase Server and operations are likely to take more than 2.5 seconds to complete.
 
-      sync:
-        $ref: "#/definitions/Sync Function"
+          The default value is 2500 milliseconds.
 
-      unsupported:
+          Changes initiate a database restart.
+        default: 2500
+
+      delta_sync:
         type: object
+        title: "Delta Sync Model"
+        description: |+
+          *NOTE:* Delta Sync is an Enterprise Edition feature on Sync Gateway and Couchbase Lite.
+
+          Use the `delta_sync ` object to specify the delta sync configuration properties.
+
+          In this context, delta-sync, is the ability to replicate only those parts of a  Couchbase mobile document that have changed.
+          This results in significant savings in bandwidth consumption as well as throughput improvements; both useful benefits when network bandwidth is typically constrained.
+
+          Delta Sync does not apply to attachment contents.
+
+          Delta Sync is disabled by default on the Sync Gateway. You can enable it through the `enabled` property.
+
+          If delta sync is enabled on Sync Gateway, then Couchbase Lite clients will switch to using delta sync automatically.
+          Similarly, if delta sync is disabled on Sync Gateway, clients will switch to normal mode.
+
+          Changes initiate a database reload
         properties:
-          api_endpoints:
-            type: object
-            description: to be completed
-            properties:
-              enable_couchbase_bucket_flush:
-                type: boolean
-                description: to be completed
-          oidc_tls_skip_verify:
+          enabled:
             type: boolean
-            default: 'false'
             description: |+
-              Unsupported option for use in development and testing environment ONLY
+              Use the ```delta_sync.enabled``` property to turn delta sync mode on or off for the given database.
 
-              `oidc_tls_skip_verify` can be used to skip validation of TLS certs used for OpenID Connection testing.
+              The following configuration example enables delta sync.
 
-              NOTE: Due to the unsupported nature of this option, there is no guarantee on its continued availability.
-          oidc_test_provider:
-            type: object
-            description: to be completed
-            properties:
-              enabled:
-                type: boolean
-                description: to be completed
-          remote_config_tls_skip_verify:
-            type: boolean
-            default: 'false'
+              ```json
+              {
+                "logging": {
+                  "console": {
+                    "log_keys": ["*"]
+                  }
+                },
+                "databases": {
+                  "db": {
+                    "server": "http://localhost:8091",
+                    "bucket": "default",
+                    "users": { "GUEST": { "disabled": false, "admin_channels": ["*"] } },
+                    "allow_conflicts": false,
+                    "revs_limit": 20,
+                    "delta_sync": {
+                      "enabled": true,
+                      "rev_max_age_seconds": 86400
+                    }
+                  }
+                }
+              }
+              ```
+
+              Footnotes
+
+              -- Use of Delta Sync incurs additional bucket storage requirements which can be tuned with the [`rev_max_age_seconds`](#databases-this_db-delta_sync-rev_max_age_seconds) property.
+
+              -- Delta Sync is automatically enabled for peer-to-peer sync between Couchbase Lite clients.
+
+              -- Delta sync is disabled for Couchbase Lite database replicas.
+
+              -- Push replications do not use Delta Sync when pushing to a pre-2.8 target.
+
+            default: false
+          rev_max_age_seconds:
+            type: integer
             description: |+
-              Unsupported option for use in development and testing environment ONLY
+              Use ```delta_sync.rev_max_age_seconds``` to adjust the time box within which deltas can be generated.
+
+              On a write operation, the revision body is backed up in the bucket and retained for `rev_max_age_seconds` to calculate future revision deltas.
+              As a result, new deltas can only be generated for read requests that come in within the `rev_max_age_seconds` time window.
+              The storage of backed up revision bodies for delta sync incurs additional bucket storage requirements.
+
+              The additional storage can be calculated with the following formula: `(doc_size * updates_per_day * 86400) / rev_max_age_seconds`.
+
+              For example, with `rev_max_age_seconds`'s default value, an average document size of 4 KB and 100 writes/day, enabling delta sync would take up an additional 400 KB of storage on Couchbase Server (`(4 * 100 * 86400)/86400`).
+
+              Setting this value to 0 will generate deltas opportunistically on pull replications, with no additional storage requirements.
+            default: 86400
+
+      compact_interval_days:
+        type: number
+        description: |+
+          Use `` property to define the interval between scheduled compaction runs (in days).
+
+          Set a zero (0) value to suppress running compactions.
+
+          Change initiates a database restart.
+
+      isgr_enabled:
+        type: boolean
+        default: 'true'
+        description: |+
+          Use the `isgr_enabled` property to define whether this Sync Gateway node can be assigned inter-Sync Gateway replications for this database.
+
+          If set to false, the Sync Gateway node will not participate in inter-Sync Gateway replications.
+
+      isgr_websocket_heartbeat_secs:
+        type: integer
+        default: 300
+        description: |+
+          If set, this duration (in seconds) is used as a custom heartbeat interval for websocket ping frames in inter-Sync Gateway replications.
+
+      serve_insecure_attachment_types:
+        type: boolean
+        default: 'false'
+        description: |+
+          The sending of a content-disposition header for attachments with headers such as "text/html"
+          forces a download, rather than browser rendering.
 
-              NOTE: Due to the unsupported nature of this option, there is no guarantee on its continued availability.
-          sgr_tls_skip_verify:
-            type: boolean
-            default: 'false'
-            description: |+
-              Unsupported option for use in development and testing environment ONLY
+          Use this option to suppress sending the content-disposition, allowing the browser to render the attachment.
 
-              `sgr_tls_skip_verify` can be used to skip validation of TLS certs used for Inter-Sync Gateway Replication.
+      query_pagination_limit:
+        type: integer
+        description: |+
+          Use the `query_pagination_limit` property to define the Query limit to be used during pagination of large queries.
 
-              NOTE: Due to the unsupported nature of this option, there is no guarantee on its continued availability.
-          user_views:
-            type: object
-            description: to be completed
-            default: 'none'
-            properties:
-              user_views_enabled:
-                type: boolean
-                description: to be completed
-          warning_thresholds:
-            type: object
-            description: to be completed
-            properties:
-              access_and_role_grants_per_doc:
-                type: boolean
-                description: to be completed
-              channels_per_doc:
-                type: boolean
-                description: to be completed
-              xattr_size_bytes:
-                type: boolean
-                description: to be completed
-          disable_clean_skipped_query:
-            type: boolean
-            description: to be completed
-      use_views:
-        type: boolean
+          Change initiates a database restart.
+
+      slow_query_warning_threshold:
+        type: integer
+        default: 500
         description: |+
-          If set to `true`, Sync Gateway will use views instead of GSI for system functions like authentication and replication.
-        default: 'false'
+          The maximum wait time, in milliseconds,for N1QL or View queries made by Sync Gateway
+
+          Log warnings if the run time of a N1QL or View query, made by Sync Gateway, exceeds this value.
+
       user_xattr_key:
         type: string
         default: none
         description: |+
           The ```user_xattr_key``` identifies the user xattr used to hold the channel access grants for documents in this database.
-          If it is not specified or its value is spaces or null then no `user_xattr_key` will be used.
 
-          This feature is not enabled by default.
+          If it is not specified or its value is spaces or null then this feature is disabled (default).
 
           If you change the value of this key, no existing grant assignments will be changed until a document mutation is triggered.
           This can be done in a number of ways:
-          - a mutation to the document which weâ€™ll see via DCP
-          - an on-demand import either through write or get
-          - by using the resync function.
-
+          -- a mutation to the document which weâ€™ll see via DCP
+          -- an on-demand import either through write or get
+          -- by using the resync function.
 
           *Dependencies:*
             The `user_xattr_key` feature requires that --
             - `enable_shared_bucket_access` be = `true`
             - xattrs be supported on the connected Couchbase Server
 
-            Mode is static.
-      username:
+          Change initiates a database restart
+
+      client_partition_window_secs:
         type: string
+        default: 2592000
         description: |+
-          The RBAC user's username for authenticating to Couchbase Server. There is no default.
+          Use `` property to define how long clients can remain offline for without losing replication metadata.
 
-          Mode is static.
+          Default 2 592 000 seconds (30 days)
 
-          Requires dbContext restart
-      view_query_timeout_secs:
-        type: integer
-        description: |+
-          The view query timeout in seconds. This property allows you to specify the time Sync Gateway should wait for a view query response from Couchbase Server before it times out. The timeout is used for both view and N1QL queries issued by Sync Gateway.
-        default: 75
+  import_filter_model:
+    type: string
+    description: |+
+      Provide the JavaScript filter function used to determine whether a document written to the Couchbase Server bucket is made available to Couchbase Mobile clients (imported).
 
+      The function takes the document body as parameter and must return a boolean to indicate whether the document should be imported or not.
 
-definitions:
-  Import Filter:
-    type: object
-    description: some text
-    properties:
-      import_filter:
-        type: string
-        description: |+
-          Provide the JavaScript filter function used to determine whether a document written to the Couchbase Server bucket is made available to Couchbase Mobile clients (imported).
+      The function is provided in the API body as raw Javascript.
 
-          The function takes the document body as parameter and must return a boolean to indicate whether the document should be imported or not.
+      ```function(doc) {
+            if (doc.type != "mobile") {
+              return false
+            }
+            return true
+          }```
 
-          The function is provided in the API body as raw Javascript.
+    default: function(doc) {return false;}
 
-          ```function(doc) {
-                if (doc.type != "mobile") {
-                  return false
-                }
-                return true
-              }```
 
-        default: function(doc) {return false;}
 
-  Role:
+  replication_configuration_model:
     type: object
     description: |+
-      Definition a Sync Gateway role
-    properties:
-      name:
-        type: string
-        description: |+
-          Name of the role
-      admin_channels:
-        type: array
-        description: |+
-          Array of channel names the role allows access to
-        items:
-          type: string
+      This replication request message body is a JSON document that comprises all the properties required to upsert a replication.
 
-  Sync Function:
-    type: object
-    description: A Javascript function that controls access
+      If the `replicationID` matches an existing `replication_id` then the values of any properties provided in the body are used to update the existing replication's property values.
     properties:
-      sync:
-        type: string
-        description: |+
-          The sync function is a JavaScript function whose source code is stored in the Sync Gateway's database configuration file. Every time a new document, revision or deletion is added to a database, the sync function is called and given a chance to examine the document (see the [Sync Function API guide](./../advance/adv-sgw-cfg-sync-function.html)).
-
-          You should provide the function in the API body as raw Javascript.
-
-          If a document is in conflict there will be multiple current revisions. The default, the "winning" one is the one whose channel assignments and access grants take effect.
-
-          If you don't supply a sync function, Sync Gateway uses the following default sync function:
+        replication_id:
+          type: string
+          description: |+
+            **About**
 
-          ```javascript
-          `function (doc, oldDoc) {
-              channel(doc.channels);
-          }`
-          ```
+            The *replication_id* property specifies either:
+            - For NEW replications, the ID to be assigned to the the replication. If no *replication_id* is specified, Sync Gateway will assign a random UUID to new replications.
+            - For existing replications, this is the ID of the required replication.
+            - If **cancel=true**, this is the id of the active replication task to be cancelled.
 
-          What this does is: Assign a document to the channels listed in its ```channels``` property -- this value must be a string or an array of strings.
+            **Constraints**
 
-          Since there is no validation, any user can change any document. For this reason, the default sync function is really only useful for experimentation and development.
+            If this is specified in the body of a POST or PUT request then it must be the same value as specified in the request URL.
 
-          The `channels` property is an array of strings that contains the names of the channels to which the document belongs.
-          If you do not include a `channels` property in a document, the document does not appear in any channels.
+        remote:
+          type: string
+          description: |+
+            **About**
 
-          Adding a `channels` property to each document is the easiest way to map documents to channels but if you need more advanced behavior such as read and write access, you'll probably need to write your own Sync Function.
+            The **remote** property represents the endpoint of s database for the remote Sync Gateway.
+            That is, it identifies the remote Sync Gateway database that is the subject of this replication's push, pull or pushAndPull action.
 
-        default: |
-          `function(doc, oldDoc) {channel(doc.channels);}`
+            Typically the endpoint will include URI, Port and Database name elements.
 
-  User:
-    type: object
-    description: |+
-      Definition of a Sync Gateway user
+            **Format**
 
-      Change initiates database restart
+            - a string containing a valid URL for a (remote) Sync Gateway database.
+            - an object whose url property contains the Sync Gateway database URL.
 
-    properties:
-      name:
-        type: string
-        description: |+
-          The user name (the same name used in the URL path).
+            **Behavior**
 
-          The valid characters for a user name are alphanumeric ASCII characters and the underscore character.
+              Dependent upon setting of **direction**.
 
-          The name property is required in a POST request.
+              If **direction** is :
+              - *pull*, 'remote' defines the remote cluster *from* which data is pulled
+              - *push*, 'remote' defines the remote cluster *to* which data is pushed
+              - *pushAndPull*, 'remote' defines the *push* configuration.
 
-          You donâ€™t need to include it in a PUT request because the user name is specified in the URL.
-      password:
-        type: string
-        description: |+
-          Password of the user.
+            **Example**
 
-          Mandatory, unless `allow_empty_password=true`.
+            ```json
+            "remote": "http://www.example.com:4984/sample-database",
+            ```
 
-      admin_channels:
-        type: array
-        description: |+
-          The channels that the user is able to access.
-        items:
+        username:
           type: string
+          default: Mandatory
           description: |+
-            Channel name
-
-      admin_roles:
-        type: array
-        description: |+
-          An array of the roles this user is associated with.
-        items:
-          type: string
-          description: Role name
+            **About**
 
-      all_channels:
-        type: array
-        description: |+
-          Shows the channels the user can access, as granted by the sync function.
+            Use `username` to provide the name of the accredited user running this replication.
 
-          This is a read-only property.
-          Changes to it are ignored.
-        items:
-          type: string
-          description: Channel name
-      email:
-        type: string
-        description: |+
-          Email address of the user.
-      disabled:
-        type: boolean
-        description: |+
-          This property is usually not included.
+            **Behavior**
 
-          If the value is `true`, access for the account is disabled and the user will not be able to login.
-      roles:
-        type: array
-        description: |+
-          Shows the roles this user is associated with by the sync function.
+            These details are used to authenticate credentials and approve access to data
 
-          This is a read-only property.
-          Changes to it are ignored.
+            Once provided and recorded, the username data is redacted and will not be displayed in either the configuration file or Admin REST API. A string of `****` will be displayed in its place.
 
-        items:
+        password:
           type: string
-          description: Role name
-
-parameters:
-  access:
-    name: access
-    in: query
-    description: Indicates whether to include in the response a list of what access this document grants (i.e. which users it allows to access which channels.) This option may only be used from the admin port.
-    type: boolean
-    default: false
-  active_only:
-    name: active_only
-    in: query
-    description: Default is false. When true, the changes response doesn't include either deleted documents, or notification for documents that the user no longer has access to.
-    type: boolean
-    default: false
-  attachment:
-    in: path
-    name: attachment
-    description: Attachment name. This value must be URL encoded. For example, if the attachment name is `blob_/avatar`, the path component passed to the URL should be `blob_%2Favatar` (tested with [URLEncoder](https://www.urlencoder.org/)).
-    type: string
-    required: true
-  attachments:
-    in: query
-    name: attachments
-    description: Default is false. Include attachment bodies in response.
-    type: boolean
-    default: false
-  atts_since:
-    name: atts_since
-    in: query
-    description: Include attachments only since specified revisions. Does not include attachments for specified revisions.
-    type: array
-    items:
-      type: string
-    required: false
-  body:
-    name: body
-    in: body
-    description: The request body
-    schema:
-      type: string
-      format: binary
-  bulkget:
-    in: body
-    name: BulkGetBody
-    description: |+
-      List of documents being requested.
-
-      Each array element is an object that *must* contain an `id` property giving the document ID.
-
-      It may also contain
-      - a `rev` property if a specific revision is desired.
-      - an `atts_since` property (as in a single-document GET) to limit which attachments are sent.
-    schema:
-      type: object
-      properties:
-        docs:
-          type: array
-          items:
-            type: object
-            properties:
-              id:
-                type: string
-                description: Document ID.
-  channels:
-    in: query
-    name: channels
-    description: Indicates whether to include in the response a channels property containing an array of channels this document is assigned to. (Channels not accessible by the user making the request will not be listed.)
-    type: boolean
-    default: false
-  channels_list:
-    in: query
-    name: channels
-    description: A comma-separated list of channel names. The response will be filtered to only documents in these channels. (This parameter must be used with the **sync_gateway/bychannel** filter parameter; see below.)
-    type: string
-    required: false
-  content_type:
-    in: header
-    name: Content-Type
-    description: Attachment Content-Type
-    type: string
-  db:
-    name: db
-    in: path
-    description: Database name
-    type: string
-    required: true
-  db-local:
-    name: db
-    in: path
-    # summary: Local database
-    description: Name of the local database
-    type: string
-    required: true
-  ddoc:
-    name: ddoc
-    in: path
-    description: Design document name
-    type: string
-    required: true
-  descending:
-    name: descending
-    in: query
-    description: Default is false. Return documents in descending order.
-    type: boolean
-    required: false
-  doc:
-    name: doc
-    in: path
-    description: Document ID
-    type: string
-    required: true
-  doc_ids:
-    in: query
-    name: doc_ids
-    description: A list of document IDs as a valid JSON array. The response will be filtered to only documents with these IDs. This parameter must be used with the `filter=_doc_ids` and `feed=normal` parameters.
-    type: array
-    items:
-      type: string
-  endkey:
-    name: endkey
-    in: query
-    description: If this parameter is provided, stop returning records when the specified key is reached.
-    type: string
-    required: false
-  feed:
-    in: query
-    name: feed
-    description: Default is 'normal'. Specifies type of change feed. Valid values are normal, continuous, longpoll, websocket.
-    type: string
-    default: 'normal'
-  group:
-    in: query
-    name: group
-    description: Group the results using the reduce function to a group or single row.
-    type: boolean
-    default: false
-  group_level:
-    in: query
-    name: group_level
-    description: Specify the group level to be used.
-    type: integer
-    required: false
-  heartbeat:
-    in: query
-    name: heartbeat
-    description: Default is 0. Interval in milliseconds at which an empty line (CRLF) is written to the response. This helps prevent gateways from deciding the socket is idle and closing it. Only applicable to longpoll or continuous feeds. Overrides any timeout to keep the feed alive indefinitely. Setting to 0 results in no heartbeat.
-    type: integer
-    default: 0
-  include_docs:
-    in: query
-    name: include_docs
-    description: Default is false. Indicates whether to include the associated document with each result. If there are conflicts, only the winning revision is returned.
-    type: boolean
-    default: false
-  keys:
-    in: query
-    name: keys
-    description: |
-      Specify a list of document IDs.
-      Note that this is an array field, so to retrieve docs with Ids of "keyid1" and "keyid4", for example, use a request in this format --
-
-      ```curl -X GET \ 'http://localhost:4985/test_db/_all_docs?keys=[%22keyid1%22,%22keyid4%22]' \ -H 'Accept: application/json'```
-    type: array
-    items:
-      type: string
-    required: false
-  limit:
-    in: query
-    name: limit
-    description: Limits the number of result rows to the specified value. Using a value of 0 has the same effect as the value 1.
-    type: integer
-  local_doc:
-    in: path
-    name: local_doc
-    description: Local document IDs begin with _local/.
-    type: string
-    required: true
-  new_edits:
-    name: new_edits
-    in: query
-    description: Default is true. Setting this to false indicates that the request body is an already-existing revision that should be directly inserted into the database, instead of a modification to apply to the current document. (This mode is used by the replicato.) This option must be used in conjunction with the `_revisions` property in the request body.
-    type: boolean
-    default: true
-  open_revs:
-    name: open_revs
-    in: query
-    description: |
-      Option to fetch specified revisions of the document. The value can be `all` to fetch all leaf revisions or an array of revision numbers (i.e. open_revs=["rev1", "rev2"]). Only [leaf revision](glossary.html) bodies that haven't been pruned are guaranteed to be returned.
-
-      If this option is specified the response will be in multipart format. Use the `Accept: application/json` request header to get the result as a JSON object.
-    type: array
-    items:
-      type: string
-    required: false
-
-  replication__replication-body:
-    in: body
-    name: ReplicationBody
-    # summary: Basic replication body (json)
-    description: |+
-      This replication request message body is a JSON document that comprises all the properties required to upsert a replication.
-
-      If the `replicationID` matches an existing `replication_id` then the values of any properties provided in the body are used to update the existing replication's property values.
-    schema:
-      type: object
-      properties:
-        # changes_feed_limit:
-        #   type: integer
-        #   default: 50
-        #   description: |+
-        #     The **changes_feed_limit** property is now deprecated.
-        #     It was previously used to define the maximum number of change entries pulled in each loop of a continuous changes feed.
-
-        #     NOTE -- Removed. This item is replaced by the 'perf-tuning-params' at version 2.8.
-
-        adhoc:
-          type: boolean
-          default: false
+          default: mandatory
           description: |+
             **About**
 
-            Use the Admin REST API's `adhoc` parameter to specify that a replication is ad hoc rather than persistent.
+              Use `password` to provide the login password value for the accredited user running this replication.
 
             **Behavior**
 
-            Ad hoc replications behave the same as normal replications, but they are automatically removed when their status changes to stopped.
-            This will usually be on completion, but may also be as a result of user action.
-
-            **Constraints**
+              These details are used to authenticate credentials and approve access to data.
 
-            This parameter is **NOT** available to configured replications; only those initialized using the Admin REST API.
+              Once provided and recorded, the password data is redacted and will not be displayed in either the configuration file or Admin REST API. A string of `****` will be displayed in its place.
 
-        batch_size:
-          type: integer
-          default: 200
+        direction:
+          type: string
           description: |+
             **About**
 
-            Use the optional `batch_size` property to specify the number of changes to be included in a single batch during replication.
+            The mandatory `direction` property specifies whether the replication is *push*, *pull* or *pushAndPull* relative to this node.
 
-        cancel:
-          type: boolean
-          default: false
-          description: |+
-            **About**
+            The property value is referenced by the [remote](rest-api-admin.html#database-this_db-replications-remote) property.
 
-            Use this parameter on,y when you want to want to cancel an existing active replication.
+            **Behavior**
+
+            - `pull` -- changes are pulled from the `remote` database
+            - `push` -- changes are pushed to the `remote` database
+            - `pushAndPull` -- changes are both pushed-to and pulled-from the `remote` database
 
             **Constraints**
 
-            - This parameter is **NOT** available in configured replications; only those initialized using the Admin REST API.
-            - **NOTE** that the body of the request must be the same as the replication's replication definition for the cancellation request to be honoured.
-            For example, if you requested continuous replication, the cancellation request must also contain the continuous field.
+            Replications created prior to version 2.8 derive their *direction* from the source/target url of the replication.
 
         conflict_resolution_type:
           type: string
@@ -1315,24 +1199,6 @@ parameters:
 
             - replications created prior to version 2.8 will default to `default`.
 
-
-        continuous:
-          type: boolean
-          default: false
-          description: |+
-            **About**
-
-            The `continuous` property specifies whether this replication will run in continuous mode.
-
-            **Behavior**
-
-            - `continuous=true`-- In continuous mode, changes are immediately synced in accordance with the replication definition.
-            - `continuous=false`-- Detected changes are synced in accordance with the replication definition. The replication ceases once all revisions are processed.
-
-            **Constraints**
-
-            - Optional for stops and removes
-
         custom_conflict_resolver:
           type: string
           default: none
@@ -1369,24 +1235,25 @@ parameters:
 
             Using complex `custom_conflict_resolver` functions can noticeably degrade performance. Use a built-in resolver whenever possible.
 
-        direction:
-          type: string
+        purge_on_removal:
+          type: boolean
+          default: false
           description: |+
             **About**
 
-            The mandatory `direction` property specifies whether the replication is *push*, *pull* or *pushAndPull* relative to this node.
+            The optional `purge_on_removal` property specifies, per replication, whether the removal of a `channel` triggers a purge.
 
-            The property value is referenced by the [remote](rest-api-admin.html#database-this_db-replications-remote) property.
+            **Options**
+            - `true` or `false`
+            - Default = false -- document removals are ignored by receiving end
 
             **Behavior**
 
-            - `pull` -- changes are pulled from the `remote` database
-            - `push` -- changes are pushed to the `remote` database
-            - `pushAndPull` -- changes are both pushed-to and pulled-from the `remote` database
+            If `purge_on_removal=false`, then the removal of channels is ignored (not purged) by the receiving end.
 
             **Constraints**
 
-            Replications created prior to version 2.8 derive their *direction* from the source/target url of the replication.
+            Replications created prior to version 2.8 *must* be run with `purge_on_removal=false`.
 
         enable_delta_sync:
           type: boolean
@@ -1406,40 +1273,15 @@ parameters:
 
             The optional `enable_delta_sync` parameter works in conjunction with the database level `delta_sync.enabled` setting, to determine whether this replication uses delta sync.
 
-            - **If** `"delta_sync.enabled": true` for both databases involved in the replication, then this parameter enables or disables its use for this specific replication.
-            -  In all other cases it has no effect and the replication runs without delta-sync.
-
-            **Constraints**
-
-            - Applies **ONLY** to Enterprise Edition deployments.
-            - Depends upon the setting of the database level parameter `delta_sync.enabled`
-            - Replications created prior to version 2.8 must run with `"enable_delta_sync": false`
-            - Push replications will not use Delta Sync when pushing to a pre-2.8 target
-        filter:
-          type: string
-          description: |+
-            **About**
-
-            Use the optional `filter`property to defines the function to be used to filter documents.
-
-            **Options**
-
-            A common value used when replicating from Sync Gateway is `sync_gateway/bychannel`. This option limits the pull replication to a specific set of channels. You can specify the required channels using `query_params`.
-
-            **Behavior**
-
-            Works in conjunction with `query_params` to control the documents processed by the replication.
-
-            **Example**
-
-            ```
-            "filter":"sync_gateway/bychannel"
-            ```
+            - **If** `"delta_sync.enabled": true` for both databases involved in the replication, then this parameter enables or disables its use for this specific replication.
+            -  In all other cases it has no effect and the replication runs without delta-sync.
 
             **Constraints**
 
-            OPTIONAL for stops and removes (even if defined during creation)
-
+            - Applies **ONLY** to Enterprise Edition deployments.
+            - Depends upon the setting of the database level parameter `delta_sync.enabled`
+            - Replications created prior to version 2.8 must run with `"enable_delta_sync": false`
+            - Push replications will not use Delta Sync when pushing to a pre-2.8 target
 
         max_backoff_time:
           type: integer
@@ -1453,48 +1295,63 @@ parameters:
 
             NOTE -- this value defaults to five minutes for replications created prior to version 2.8.
 
-        password:
+        initial_state:
           type: string
-          default: mandatory
+          default: Running
           description: |+
             **About**
 
-              Use `password` to provide the login password value for the accredited user running this replication.
+            The optional `initial_state` property is used to specify that the replication must be launched in 'Stopped' mode
 
             **Behavior**
 
-              These details are used to authenticate credentials and approve access to data.
-
-              Once provided and recorded, the password data is redacted and will not be displayed in either the configuration file or Admin REST API. A string of `****` will be displayed in its place.
+            All replications are configured to start on Sync Gateway launch. So, if omitted, the state defaults to 'Running'.
 
-        perf_tuning_params:
-          type: array
-          description: |+
-            The perf_tuning_params are not available in this release.
+            **Constraints*
 
-            NOTE -- This property replaces the 'changes_feed_limit' at version 2.8
-          items:
-            type: string
+            Replications created prior to version 2.8 will all default to a state of 'Running'.
 
-        purge_on_removal:
+        continuous:
           type: boolean
           default: false
           description: |+
             **About**
 
-            The optional `purge_on_removal` property specifies, per replication, whether the removal of a `channel` triggers a purge.
+            The `continuous` property specifies whether this replication will run in continuous mode.
+
+            **Behavior**
+
+            - `continuous=true`-- In continuous mode, changes are immediately synced in accordance with the replication definition.
+            - `continuous=false`-- Detected changes are synced in accordance with the replication definition. The replication ceases once all revisions are processed.
+
+            **Constraints**
+
+            - Optional for stops and removes
+
+        filter:
+          type: string
+          description: |+
+            **About**
+
+            Use the optional `filter`property to defines the function to be used to filter documents.
 
             **Options**
-            - `true` or `false`
-            - Default = false -- manage removals are ignored by receiving end
+
+            A common value used when replicating from Sync Gateway is `sync_gateway/bychannel`. This option limits the pull replication to a specific set of channels. You can specify the required channels using `query_params`.
 
             **Behavior**
 
-            If `purge_on_removal=false`, then the removal of channels is ignored (not purged) by the receiving end.
+            Works in conjunction with `query_params` to control the documents processed by the replication.
+
+            **Example**
+
+            ```
+            "filter":"sync_gateway/bychannel"
+            ```
 
             **Constraints**
 
-            Replications created prior to version 2.8 *must* be run with `purge_on_removal=false`.
+            OPTIONAL for stops and removes (even if defined during creation)
 
         query_params:
           type: array
@@ -1528,559 +1385,142 @@ parameters:
           items:
             type: string
 
-        remote:
-          type: string
+        cancel:
+          type: boolean
+          default: false
           description: |+
             **About**
 
-            The **remote** property represents the endpoint of s database for the remote Sync Gateway.
-            That is, it identifies the remote Sync Gateway database that is the subject of this replication's push, pull or pushAndPull action.
+            Use this parameter on,y when you want to want to cancel an existing active replication.
 
-            Typically the endpoint will include URI, Port and Database name elements.
+            **Constraints**
 
-            **Format**
+            - This parameter is **NOT** available in configured replications; only those initialized using the Admin REST API.
+            - **NOTE** that the body of the request must be the same as the replication's replication definition for the cancellation request to be honoured.
+            For example, if you requested continuous replication, the cancellation request must also contain the continuous field.
 
-            - a string containing a valid URL for a (remote) Sync Gateway database.
-            - an object whose url property contains the Sync Gateway database URL.
+        adhoc:
+          type: boolean
+          default: false
+          description: |+
+            **About**
 
-            **Behavior**
+            Use the Admin REST API's `adhoc` parameter to specify that a replication is ad hoc rather than persistent.
 
-              Dependent upon setting of **direction**.
+            **Behavior**
 
-              If **direction** is :
-              - *pull*, 'remote' defines the remote cluster *from* which data is pulled
-              - *push*, 'remote' defines the remote cluster *to* which data is pushed
-              - *pushAndPull*, 'remote' defines the *push* configuration.
+            Ad hoc replications behave the same as normal replications, but they are automatically removed when their status changes to stopped.
+            This will usually be on completion, but may also be as a result of user action.
 
-            **Example**
+            **Constraints**
 
-            ```json
-            "remote": "http://www.example.com:4984/sample-database",
-            ```
+            This parameter is **NOT** available to configured replications; only those initialized using the Admin REST API.
 
-        replication_id:
-          type: string
+        batch_size:
+          type: integer
+          default: 200
           description: |+
             **About**
 
-            The *replication_id* property specifies either:
-            - For NEW replications, the ID to be assigned to the the replication. If no *replication_id* is specified, Sync Gateway will assign a random UUID to new replications.
-            - For existing replications, this is the ID of the required replication.
-            - If **cancel=true**, this is the id of the active replication task to be cancelled.
+            Use the optional `batch_size` property to specify the number of changes to be included in a single batch during replication.
 
-            **Constraints**
+        perf_tuning_params:
+          type: array
+          description: |+
+            The perf_tuning_params are not available in this release.
 
-            If this is specified in the body of a POST or PUT request then it must be the same value as specified in the request URL.
+            NOTE -- This property replaces the 'changes_feed_limit' at version 2.8
+          items:
+            type: string
 
 
-        initial_state:
-          type: string
-          default: Running
-          description: |+
-            **About**
+  bucket_configuration_model:
+    type: object
+    title: bucket_configuration_model
+    description: |+
+      Defines the Couchbase Server bucket to which this Sync Gateway database is associated.
 
-            The optional `initial_state` property is used to specify that the replication must be launched in 'Stopped' mode
+      *Note:* ReadOnly data in this object is drawn from the Bootstrap Configuration and cannot be changed using the REST API.
 
-            **Behavior**
+    required:
+    - server
+    - bucket
+    - username
+    - password
 
-            All replications are configured to start on Sync Gateway launch. So, if omitted, the state defaults to 'Running'.
+    properties:
 
-            **Constraints*
+      server:
+        type: string
+        readOnly: true
+        description: |+
+          Read-only item inherited from the bootstrap configuration file; cannot be changed using the REST API.
 
-            Replications created prior to version 2.8 will all default to a state of 'Running'.
+          Defines the Couchbase Server connection string.
 
-        username:
-          type: string
-          default: Mandatory
-          description: |+
-            **About**
+      bucket:
+        type: string
+        default: database name
+        description: |+
+          The `bucket` property defines the Couchbase Server bucket name for this database.
 
-            Use `username` to provide the name of the accredited user running this replication.
+          If not specified, then the database `name` is used as the `bucket` name.
 
-            **Behavior**
+      username:
+        readOnly: true
+        type: string
+        description: |+
+          The item defines the RBAC user's username for authenticating to Couchbase Server.
 
-            These details are used to authenticate credentials and approve access to data
+          There is no default.
 
-            Once provided and recorded, the username data is redacted and will not be displayed in either the configuration file or Admin REST API. A string of `****` will be displayed in its place.
+          Read-only item inherited from the bootstrap configuration file; cannot be changed using the REST API.
 
 
-# END: Define sync-gateway replications
-#
+      password:
+        readOnly: true
+        type: string
+        description: |+
+          The item defines the RBAC user's password for authenticating to Couchbase Server.
 
+          There is no default.
 
+          Read-only item inherited from the bootstrap configuration file; cannot be changed using the REST API.
 
+      certpath:
+        readOnly: true
+        type: string
+        description: |+
+          Absolute or relative path on the filesystem to the TLS certificate file to be used to connect to the Couchbase Server.
 
-  # replication_id:
-  #   in: path
-  #   type: string
-  #   name: replicationID
-  #   description: If supplied, the **replicationID** parameter must be a valid replication id. If it is not supplied for a *new replication*, then a random UUID is generated.
+          Relative paths are relative to the directory that contains the Sync Gateway executable.
 
-  replication_id-upsert:
-    in: path
-    type: string
-    name: replicationID
-    required: true
-    description: |+
-      <p>If supplied, the <i>replicationID</i> parameter must be a valid replication id.</p>
-      <p>If it is not supplied for a <i>new</i> replication*, then a random UUID is generated.</p>
-
-  # replication_id-get:
-  #   in: path
-  #   type: string
-  #   name: replicationID
-  #   description: |+
-  #     The *replicationID* parameter specifies the required replication.
-
-  # replication_id-delete:
-  #   in: path
-  #   type: string
-  #   name: replicationID
-  #   description: |+
-  #     The *replicationID* parameter specifies the replication to be deleted.
-
-  replication_id-required:
-    in: path
-    type: string
-    name: replicationID
-    required: true
-    description: |+
-      The {replicationID} parameter identifies the target replication.
+          Read-only item inherited from the bootstrap configuration file; cannot be changed using the REST API.
 
-  replicationStatus-action:
-    in: query
-    name: action
-    type: string
-    default: none
-    required: true
-    description: |+
-      The value of the {action} parameter specifies the value you want the selected replication's status set to.
+      keypath:
+        readOnly: true
+        type: string
+        description: |+
+          Absolute or relative path on the filesystem to the TLS private key file to be used to connect to the Couchbase Server.
 
-      <p>Valid values are:</p>
+          Relative paths are relative to the directory that contains the Sync Gateway executable.
 
-      - **start** : Use this action to start a stopped replication
-      - **stop** : Use this action to stop a started replication
-      - **reset** : Use this action to reset a stopped replication. This will set the checkpoint to zero. For bidirectional replication, both push and pull checkpoints are reset to zero.
-  rev:
-    name: rev
-    in: query
-    description: Revision identifier of the parent revision the new one should replace. (Not used when creating a new document.)
-    type: string
-    required: false
-  rev_get:
-    name: rev
-    in: query
-    description: Revision identifier of the revision to get. By default, Sync Gateway returns the current revision. This parameter is generally only needed for conflict resolution. For example where the app might need to retrieve a conflicting leaf revision that isn't the current revision.
-    type: string
-    required: false
-  rev_put:
-    name: rev
-    in: query
-    description: Revision identifier of the revision to update. It must be the last revision in the history.
-    type: string
-    required: true
-  rev_delete:
-    name: rev
-    in: query
-    description: Revision identifier of the revision to delete. It must be the identifier of the latest revision in the history.
-    type: string
-    required: true
-  revs:
-    in: query
-    name: revs
-    description: Default is false. Indicates whether to include a _revisions property for each document in the response, which contains a revision history of the document. The length of the returned revision tree can be specified with the `revs_limit` querystring parameter.
-    type: boolean
-    default: false
-  role:
-    in: body
-    name: role
-    description: The message body is a JSON document that contains the following objects.
-    schema:
-      $ref: '#/definitions/Role'
-
-  role_name:
-    in: path
-    name: name
-    description: |+
-      Role name, may contain any combination of the characters `[a-z A-Z 0-9 - + . @ %]`, when creating a role any other characters must be percent encoded, see: [https://en.wikipedia.org/wiki/Percent-encoding](https://en.wikipedia.org/wiki/Percent-encoding).
+          Read-only item inherited from the bootstrap configuration file; cannot be changed using the REST API.
 
-      When passing a role name in a URL path it must be escaped again using percent encoding e.g. if a role is created with the name "0|59", the '|' character must first be percent-encoded resulting in "0%7C59". When using the same role name in a URL path it must be percent-encoded a second time resulting in "0%257C59"
-    type: string
-    required: true
-
-  since:
-    in: query
-    name: since
-    description: Starts the results from the change immediately after the given sequence ID. Sequence IDs should be considered opaque; they come from the last_seq property of a prior response.
-    type: integer
-    required: false
-
-  style:
-    in: query
-    name: style
-    description: Default is 'main_only'. Number of revisions to return in the changes array. main_only returns the current winning revision, all_docs returns all leaf revisions including conflicts and deleted former conflicts.
-    type: string
-    default: 'main_only'
-  timeout:
-    in: query
-    name: timeout
-    description: Default is 300000. Maximum period in milliseconds to wait for a change before the response is sent, even if there are no results. Only applicable for longpoll or continuous feeds. Setting to 0 results in no timeout.
-    type: integer
-    default: 300000
-  update_seq:
-    in: query
-    name: update_seq
-    description: Default is false. Indicates whether to include the update_seq (document sequence ID) property in the response.
-    type: boolean
-    default: false
-  view:
-    name: view
-    in: path
-    description: View name
-    type: string
-    required: true
-  batch:
-    in: query
-    name: batch
-    description: Stores the document in batch mode. To use, set the value to ok.
-    type: string
-    required: false
-  changes_body:
-    in: body
-    name: ChangesBody
-    description: The request body
-    schema:
-      properties:
-        limit:
-          description: Limits the number of result rows to the specified value. Using a value of 0 has the same effect as the value 1.
-          type: integer
-        style:
-          description: Default is 'main_only'. Number of revisions to return in the changes array. The only possible value is all_docs and it returns all leaf revisions including conflicts and deleted former conflicts.
-          type: string
-          default: 'main_only'
-        active_only:
-          description: Default is false. When true, the changes response doesn't include either deleted documents, or notification for documents that the user no longer has access to.
-          type: boolean
-          default: false
-        include_docs:
-          description: Default is false. Indicates whether to include the associated document with each result. If there are conflicts, only the winning revision is returned.
-          type: boolean
-          default: false
-        filter:
-          description: Indicates that the returned documents should be filtered. The valid values are sync_gateway/bychannel and _doc_ids.
-          type: string
-        channels:
-          description: A comma-separated list of channel names. The response will be filtered to only documents in these channels. (This parameter must be used with the sync_gateway/bychannel filter parameter; see below.)
-          type: string
-        doc_ids:
-          description: A list of document IDs as a valid JSON array. The response will be filtered to only documents with these IDs. (This parameter must be used with the _doc_ids filter parameter; see below.)
-          type: array
-          items:
-            type: string
-        feed:
-          description: Default is 'normal'. Specifies type of change feed. Valid values are normal, continuous, longpoll, websocket.
-          type: string
-          default: 'normal'
-        since:
-          description: Starts the results from the change immediately after the given sequence ID. Sequence IDs should be considered opaque; they come from the last_seq property of a prior response.
-          type: object
-        heartbeat:
-          description: Default is 0. Interval in milliseconds at which an empty line (CRLF) is written to the response. This helps prevent gateways from deciding the socket is idle and closing it. Only applicable to longpoll or continuous feeds. Overrides any timeout to keep the feed alive indefinitely. Setting to 0 results in no heartbeat.
-          type: integer
-          default: 0
-        timeout:
-          description: Default is 300000. Maximum period in milliseconds to wait for a change before the response is sent, even if there are no results. Only applicable for longpoll or continuous feeds. Setting to 0 results in no timeout.
-          type: integer
-          default: 300000
-  filter:
-    in: query
-    name: filter
-    description: Indicates that the reported documents should be filtered. The valid values are sync_gateway/bychannel and _doc_ids.
-    type: string
-    required: false
-  logtags:
-    in: body
-    name: log_keys
-    description: |
-      Use the body to provide a list of the log keys you want to set.
-
-      For example -- `{"Changes++":true, "Cache":true, "HTTP":true, "DCP":true, "WS": true, "WSFrame": true, "Replicate": true}`
-    schema:
-      type: object
-      properties:
-        All:
-          type: boolean
-          description: |
-            Use the wildcard character `*` to set all log keys
-            For example ```{"*":true}```
-        none:
-          type: boolean
-          description: |
-            Use "none" or "" as the key to disable all log keys.
-            For example ```{"none":true}```
-        Admin:
-          type: boolean
-          description: Admin processes in Sync Gateway.
-        Access:
-          type: boolean
-          description: Anytime an access() call is made in the sync function.
-        Auth:
-          type: boolean
-          description: Authentication.
-        Bucket:
-          type: boolean
-          description: Sync Gateway interactions with the bucket (trace level only).
-        Cache:
-          type: boolean
-          description: Interactions with Sync Gateway's in-memory channel cache.
-        Changes:
-          type: boolean
-          description: Processing of /{db}/_changes requests.
-        CRUD:
-          type: boolean
-          description: Updates made by Sync Gateway to documents.
-        DCP:
-          type: boolean
-          description: DCP-feed processing.
-        Events:
-          type: boolean
-          description: Event processing (webhooks).
-        gocb:
-          type: boolean
-          description: All logging emitted by the GoCB SDK
-        HTTP:
-          type: boolean
-          description: All requests made to the Sync Gateway REST APIs.
-        HTTP+:
-          type: boolean
-          description: Additional information about HTTP requests (response times, status codes).
-        Import:
-          type: boolean
-          description: Introduced in Sync Gateway 1.5 to help troubleshoot the import process of a document (this is the Sync Gateway process to make a document that was added through N1QL or the Server SDKs mobile-aware). This log key can be useful to troubleshoot why a given document was not successfully imported.
-        Javascript:
-          type: boolean
-          description: All logging from Javascript. This includes -- sync function, import filters, webhook filter function, and the custom ISGR conflict resolvers
-        Migrate:
-          type: boolean
-          description: Logs messages thhat show when old inline document metdata is upgraded to xattrs
-        Query:
-          type: boolean
-          description: Query is used for Sync Gateway code related to N1QL queries
-        Replicate:
-          type: boolean
-          description: |
-            Log messages related to replications between Sync Gateways (using sg-replicate). This tag cannot be used for replications initiated by Couchbase Lite.
-        SGCluster:
-          type: boolean
-          description: Log messages related to the sharded import and HA sg-replicate
-        Sync:
-          type: boolean
-          description: Activity which relates to synchronization between Couchbase Lite and Sync Gateway
-        SyncMsg:
-          type: boolean
-          description: Can be used for additional Sync logging output
-        WS:
-          type: boolean
-          description: Websocket replication log messages
-        WSFrame:
-          type: boolean
-          description: Can be used for additional WS logging output
-  level:
-    in: query
-    name: level
-    description: |
-      **Deprecated** -- please use `logLevel` instead
-      This setting determines the verbosity of the logging
-      -- level=1 - The default, regular, logging
-      -- level=2 - Enables warnings and panics logging
-      -- level=3 - Will log panics only
-    type: integer
-  logLevel:
-    in: query
-    name: logLevel
-    description: |
-      This setting determines the verbosity of the logging.
-
-      Available values are
-      -- `none`
-      -- `error`
-      -- `warn`
-      -- `info`
-      -- `debug`
-      -- `trace`
-
-      Note that the setting is additive. For example, setting `info` will also enable both `error` and `warn`.
+      cacertpath:
+        readOnly: true
+        type: string
+        description: |+
+          Absolute or relative path on the filesystem to the root CA certificate to verify the certificate chain and hostname of the Couchbase Server cluster.
 
-    type: string
-  sgcollect_info:
-    in: body
-    name: sgcollect_info
-    description: Options that can be specified to use in an sgcollect_info run
-    schema:
-      type: object
-      properties:
-        redact_level:
-          type: string
-          description: Can be set to `none` or `partial` for redaction of collected logs.
-          default: none
-        redact_salt:
-          type: string
-          description: If set, use this salt when redacting logs.
-        output_dir:
-          type: string
-          description: Where to store the collected zip.
-          default: configured `LogFilePath` location (e.g. `/home/sync_gateway/logs`)
-        upload:
-          type: boolean
-          description: Whether to upload the collected logs.
-          default: false
-        upload_host:
-          type: string
-          description: s3 URL for upload.
-          default: https://uploads.couchbase.com
-        customer:
-          type: string
-          description: |+
-            Customer name to use when uploading logs.
-            required -- if upload is set
-        ticket:
-          type: string
-          description: Zendesk ticket number to use when uploading logs.
-  name:
-    in: path
-    name: name
-    description: |
-      User's name, may contain contain any combination of the characters `[a-z A-Z 0-9 - + . @ %]`, when creating a user any other characters must be percent encoded, see: [https://en.wikipedia.org/wiki/Percent-encoding](https://en.wikipedia.org/wiki/Percent-encoding).
-
-      When passing a user name in a URL path it must be escaped again using percent encoding e.g. if a user is created with the name "0|59", the '|' character must first be percent-encoded resulting in "0%7C59". When using the same user name in a URL path it must be percent-encoded a second time resulting in "0%257C59"
-    type: string
-    required: true
-  replicate__replication-body:
-    in: body
-    name: ReplicationBody
-    description: The request message body is a JSON document that contains the following objects.
-    schema:
-      type: object
-      properties:
-        source:
-          type: string
-          description: Identifies the database to copy revisions from. Can be a string containing a local database name or a remote database URL, or an object whose url property contains the database name or URL. Also an object can contain headers property that contains custom header values such as a cookie.
-        target:
-          type: string
-          description: Identifies the database to copy revisions to. Same format and interpretation as source.
-        continuous:
-          type: boolean
-          description: Specifies whether the replication should be in continuous mode.
-        filter:
-          type: string
-          description: Indicates that the documents should be filtered using the specified filter function name. A common value used when replicating from Sync Gateway is sync_gateway/bychannel to limit the pull replication to a set of channels.
-        query_params:
-          type: object
-          description: A set of key/value pairs to use in the querystring of the replication. For example, the channels field can be used to pull from a set of channels (in this particular case, the filter key must be set for the channels field to work as expected).
-        replication_id:
-          type: string
-          description: If the cancel parameter is true then this is the id of the active replication task to be cancelled, otherwise this is the replication_id to be used for the new replication. If no replication_id is given for a new replication it will be assigned a random UUID.
+          Required for X509 Authentication.
 
-        cancel:
-          type: boolean
-          description: Indicates that a running replication task should be cancelled, the running task is identified by passing its replication_id or by passing the original source and target values.
-        changes_feed_limit:
-          type: integer
-          description: The maximum number of change entries to pull in each loop of a continuous changes feed.
-          default: 50
-  revs_limit:
-    in: query
-    name: revs_limit
-    description: The number of revisions to include in the response from the document history. This parameter is only honoured if the `revs=true` querystring parameter is also sent in the request. If `revs=true` is specified and `revs_limit` isn't, the full revision history is returned.
-    type: integer
-    required: false
-  show_exp:
-    in: query
-    name: show_exp
-    description: Whether to show the _exp property in the response.
-    type: boolean
-    default: false
-    required: false
-  user:
-    in: body
-    name: body
-    description: Request body
-    schema:
-      $ref: '#/definitions/User'
-
-
-responses:
-
-  '200':
-    description: OK
-    # type: object
-    schema:
-      properties:
-        id:
-          type: string
-          description: Document identifier
-        rev:
-          type: string
-          description: Revision identifier
-        ok:
-          type: boolean
-          description: Indicates whether the operation was successful
-
-  '200-db-config':
-    description: OK
-    # type: object
-    schema:
-      $ref: '#/definitions/Database-configuration'
-
-  '200-import-filter':
-    description: OK
-    # type: object
-    schema:
-      $ref: '#/definitions/Import Filter'
-
-  '200-role':
-    description: OK
-    # type: object
-    schema:
-      $ref: '#/definitions/Role'
-
-  '200-sync':
-    description: OK
-    # type: object
-    schema:
-      $ref: '#/definitions/Sync Function'
-
-  '200-user':
-    description: OK
-    # type: object
-    schema:
-      $ref: '#/definitions/User'
-
-  '200-db-info':
-    description: OK
-    # type: object
-    schema:
-      type: object
-      description: Database Information
-      properties:
-        db_name:
-          type: string
-          description: Name of the database
-        db_uuid:
-          type: integer
-          description: Database identifier
-        disk_format_version:
-          type: integer
-          description: Database schema version
-        disk_size:
-          type: integer
-          description: Total amount of data stored on the disk (in bytes)
-        instance_start_time:
-          type: string
-          description: Date and time the database was opened (in microseconds since 1 January 1970)
-        state:
-          type: string
-          description: The state of the specified database. Possible values are 'Online' and 'Offline'. A database can be taken offline and brought back online using the /{db}/_offline and /{db}/_online endpoints on the Admin REST API.
-        update_seq:
-          type: string
-          description: Number of updates to the database
+          Relative paths are relative to the directory that contains the Sync Gateway executable.
+
+          Read-only item inherited from the bootstrap configuration file; cannot be changed using the REST API.
+
+      kv_tls_port:
+        readOnly: true
+        type: string
+        description: |+
+          Unused item
